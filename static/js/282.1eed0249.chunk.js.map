{"version":3,"file":"static/js/282.1eed0249.chunk.js","mappings":"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","sources":["pages/profile/profile.styled.ts","pages/profile/components/userCard/userCard.styled.ts","pages/profile/components/userBlock/userBlock.styled.ts","components/avatar/avatar.styled.ts","components/avatar/avatar.tsx","pages/profile/components/userBlock/userBlock.tsx","pages/profile/components/petsBlock/petsBlock.styled.ts","pages/profile/components/petsBlock/petsBlock.tsx","pages/profile/components/userCard/userCard.tsx","pages/profile/components/myNotices/myNotices.styled.ts","pages/profile/components/myNotices/myNotices.tsx","pages/profile/profile.tsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Section = styled.section``;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 32px;\n`;","import styled from 'styled-components';\nimport { theme } from 'constants/theme';\n\nexport const Wrapper = styled.div`\n  background-color: ${theme.colors.white};\n  border-radius: 60px;\n  padding: 40px;\n`;","import styled from 'styled-components';\nimport { theme } from 'constants/theme';\n\nexport const Wrapper = styled.div`\n  margin-bottom: 40px;\n`;\n\nexport const Title = styled.h2`\n  color: ${theme.colors.secondBlack};\n  font-size: ${theme.fontSizes.s};\n  font-weight: ${theme.fontWeight.bold};\n  line-height: 1.33;\n  margin-bottom: 20px;\n`;\n\nexport const InputWrapper = styled.div`\n  margin-bottom: 14px;\n  width: 440px;\n  /* width: 100%; */\n\n  input {\n    width: 100%;\n    padding: 16px;\n    font-size: ${theme.fontSizes.xs};\n    color: ${theme.colors.black};\n    font-weight: ${theme.fontWeight.medium};\n    line-height: 1.25;\n    letter-spacing: -0.48px;\n    border: 1px solid ${theme.colors.accent};\n    border-radius: 30px;\n    box-sizing: border-box;\n    outline: none;\n    transition: border-color ${theme.transition};\n\n    &.filled {\n      border: 1px solid ${theme.colors.accent};\n    }\n\n    &.unfilled {\n      border: 1px solid ${theme.colors.lightGrey};\n    }\n  }\n`;\n\nexport const UpperWrapper = styled.div`\n  display: flex;\n`;\n\nexport const StyledUser = styled.div`\n  display: flex;\n  gap: 4px;\n  justify-content: center;\n  align-items: center;\n  width: 80px;\n  height: 38px;\n  border-radius: 30px;\n  background-color: ${theme.colors.accent};\n  color: ${theme.colors.white};\n  font-size: ${theme.fontSizes.xxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.2857;\n  letter-spacing: -0.28px;\n`;\n\nexport const UserIcon = styled.svg`\n  width: 18px;\n  height: 18px;\n  fill: ${theme.colors.white};\n`;\n\nexport const EditBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 38px;\n  height: 38px;\n  border-radius: 50%;\n  background-color: ${theme.colors.beige};\n  border: none;\n`;\n\nexport const EditIcon = styled.svg`\n  width: 18px;\n  height: 18px;\n  fill: ${theme.colors.accent};\n`;","import styled from 'styled-components';\nimport { theme } from 'constants/theme';\n\nexport const AvatarBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const AvatarWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 110px;\n  height: 110px;\n  background-color: ${theme.colors.beige};\n  border-radius: 50%;\n  margin-left: 85px;\n  margin-right: 127px;\n  overflow: hidden;\n`;\n\nexport const UserIconAvatar = styled.svg`\n  width: 50px;\n  height: 50px;\n  fill: ${theme.colors.accent};\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const UploadBtn = styled.button`\n  color: ${theme.colors.black};\n  font-family: 'Manrope', sans-serif;\n  font-size: ${theme.fontSizes.xxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.2857;\n  letter-spacing: -0.28px;\n  text-decoration: underline;\n  background-color: transparent;\n  border: none;\n  margin-right: 40px;\n`;\n\nexport const Form = styled.form`\n  color: ${theme.colors.black};\n  font-size: ${theme.fontSizes.xxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.2857;\n  letter-spacing: -0.28px;\n  text-decoration: underline;\n  margin-right: 40px;\n`;","import {\n  AvatarBlock,\n  AvatarWrapper,\n  Form,\n  // Image,\n  // UserIconAvatar,\n} from './avatar.styled';\n// import sprite from 'assets/sprite.svg';\nimport { ChangeEvent } from 'react';\n// import { useDispatch } from 'react-redux';\n//   import { selectUser } from '../../redux/auth/authSelectors';\n// import { setAvatarURL } from '../../redux/auth/authSlice';\n\nexport const Avatar = () => {\n  // const dispatch = useDispatch();\n  //   const user = useSelector(selectUser);\n\n  const handleChangeAvatar = (e: ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n\n    if (file) {\n      // const blob = new Blob([file]);\n      // const objectURL = URL.createObjectURL(blob);\n      //   dispatch(setAvatarURL(objectURL));\n    }\n  };\n  return (\n    <AvatarBlock>\n      <AvatarWrapper>\n        {/* {user.avatarURL ? (\n          <Image src={user.avatarURL} alt=\"User\" />\n        ) : (\n          <UserIconAvatar>\n            <use href={sprite + '#icon-user'}></use>\n          </UserIconAvatar>\n        )} */}\n      </AvatarWrapper>\n      <Form>\n        <input\n          type=\"file\"\n          name=\"file\"\n          id=\"inputFile\"\n          style={{ display: 'none' }}\n          onChange={handleChangeAvatar}\n        />\n        <label htmlFor=\"inputFile\" style={{ cursor: 'pointer' }}>\n          Upload photo\n        </label>\n      </Form>\n    </AvatarBlock>\n  );\n};\n","import {\n  EditBtn,\n  EditIcon,\n  InputWrapper,\n  StyledUser,\n  Title,\n  UpperWrapper,\n  UserIcon,\n  Wrapper,\n} from './userBlock.styled';\n// import { useSelector } from 'react-redux';\n// import { selectUser } from '../../redux/auth/authSelectors';\nimport { useState } from 'react';\nimport sprite from 'assets/sprite.svg';\n\nimport { Avatar } from 'components/avatar';\n\nconst user = {\n  name: 'test',\n  email: 'test',\n  phone: 'test',\n};\n\nexport const UserBlock = () => {\n  const [, setModal] = useState(false);\n\n  // const user = useSelector(selectUser);\n  const { name, email, phone } = user;\n\n  const handleModal = () => {\n    setModal(state => !state);\n  };\n\n  return (\n    <Wrapper>\n      <UpperWrapper>\n        <StyledUser>\n          <p>User</p>\n          <UserIcon>\n            <use href={sprite + '#icon-user'}></use>\n          </UserIcon>\n        </StyledUser>\n        <Avatar />\n        <EditBtn onClick={handleModal}>\n          <EditIcon>\n            <use href={sprite + '#icon-edit'}></use>\n          </EditIcon>\n        </EditBtn>\n        {/* {modal && (\n          <BasicModalWindow handleModalToggle={handleModal}>\n            <ModalEditUser handleModalToggle={handleModal} />\n          </BasicModalWindow>\n        )} */}\n      </UpperWrapper>\n      <Title>My information</Title>\n\n      <form>\n        <InputWrapper>\n          <label>\n            <input type=\"text\" name=\"name\" value={name} readOnly />\n          </label>\n        </InputWrapper>\n        <InputWrapper>\n          <label>\n            <input type=\"text\" name=\"email\" value={email} readOnly />\n          </label>\n        </InputWrapper>\n        <InputWrapper>\n          <label>\n            <input\n              type=\"text\"\n              name=\"phone\"\n              value={phone || '+380'}\n              readOnly\n              className={phone ? 'filled' : 'unfilled'}\n            />\n          </label>\n        </InputWrapper>\n      </form>\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\nimport { theme } from 'constants/theme';\nimport { NavLink } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  margin-bottom: 40px;\n`;\n\nexport const UpperWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  line-height: 1.33;\n  margin-bottom: 20px;\n`;\n\nexport const Title = styled.h2`\n  color: ${theme.colors.secondBlack};\n  font-size: ${theme.fontSizes.s};\n  font-weight: ${theme.fontWeight.bold};\n`;\n\nexport const Link = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 4px;\n  padding: 10px 20px;\n  font-weight: ${theme.fontWeight.bold};\n  font-size: ${theme.fontSizes.xs};\n  line-height: 1.25;\n  letter-spacing: -0.48px;\n  background-color: ${theme.colors.accent};\n  color: ${theme.colors.white};\n  border-radius: 30px;\n  transition: color ${theme.transition}, background-color ${theme.transition};\n\n  &:hover,\n  :focus {\n    color: ${theme.colors.accent};\n    background-color: ${theme.colors.beige};\n  }\n\n  &:hover svg,\n  :focus svg {\n    stroke: ${theme.colors.accent};\n  }\n`;\n\nexport const PlusIcon = styled.svg`\n  width: 18px;\n  height: 18px;\n  stroke: ${theme.colors.white};\n  transition: stroke ${theme.transition};\n`;","import {\n  Link,\n  PlusIcon,\n  Title,\n  UpperWrapper,\n  Wrapper,\n} from './petsBlock.styled';\nimport sprite from 'assets/sprite.svg';\n\nexport const PetsBlock = () => {\n  return (\n    <Wrapper>\n      <UpperWrapper>\n        <Title>My pets</Title>\n        <Link to=\"/add-pet\">\n          Add pet\n          <PlusIcon>\n            <use href={sprite + '#icon-plus'}></use>\n          </PlusIcon>\n        </Link>\n      </UpperWrapper>\n    </Wrapper>\n  );\n};\n","import { Wrapper } from './userCard.styled';\n// import { useNavigate } from 'react-router-dom';\n// import { useDispatch } from 'react-redux';\n// import { logOut } from '../../redux/auth/authOperation';\nimport { Button } from 'ui/button';\nimport { UserBlock } from '../userBlock';\nimport { PetsBlock } from '../petsBlock';\n\nexport const UserCard = () => {\n  // const dispatch = useDispatch();\n  // const navigate = useNavigate();\n\n  // const handleClick = () => {\n  //   // dispatch(logOut());\n  //   navigate('/home');\n  // };\n\n  return (\n    <Wrapper>\n      <UserBlock />\n      <PetsBlock />\n\n      <Button\n        type={'button'}\n        // width={'136px'}\n        // height={'50px'}\n        // handleClick={handleClick}\n        // beigebackground=\"true\"\n      >\n        LOG OUT\n      </Button>\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\nimport { theme } from 'constants/theme';\n\nexport const MyNoticesWrapper = styled.div`\n  /* display: flex;\n  justify-content: center;\n  align-items: center; */\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  gap: 8px;\n  /* justify-content: center;\n  align-items: center; */\n`;\n\nexport const TextWrapper = styled.div`\n  padding: 180px 135px 135px 103px;\n  /* text-align: center; */\n`;\n\nexport const Text = styled.p`\n  font-size: ${theme.fontSizes.xs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.25;\n  letter-spacing: -0.32px;\n  color: ${theme.colors.black};\n  width: 458px;\n`;\n\nexport const Accent = styled.span`\n  color: ${theme.colors.accent};\n`;","import { Button } from 'ui/button';\nimport {\n  Accent,\n  ButtonWrapper,\n  MyNoticesWrapper,\n  Text,\n  TextWrapper,\n} from './myNotices.styled';\n\nexport const MyNotices = () => {\n  return (\n    <MyNoticesWrapper>\n      <ButtonWrapper>\n        <Button\n          type={'button'}\n          //   width={'142px'}\n          //   height={'48px'}\n        >\n          My favorite pets\n        </Button>\n\n        <Button\n          type={'button'}\n          //   width={'142px'}\n          //   height={'48px'}\n          //   whitebackground=\"true\"\n        >\n          Viewed\n        </Button>\n      </ButtonWrapper>\n      <TextWrapper>\n        <Text>\n          Oops, <Accent>looks like there aren't any furries</Accent> on our\n          adorable page yet. Do not worry! View your pets on the \"find your\n          favorite pet\" page and add them to your favorites.\n        </Text>\n      </TextWrapper>\n    </MyNoticesWrapper>\n  );\n};\n","import { Section, Wrapper } from './profile.styled';\nimport { Container } from 'ui/container';\nimport { UserCard } from './components/userCard';\nimport { MyNotices } from './components';\n\nconst Profile = () => {\n  return (\n    <Section>\n      <Container>\n        <Wrapper>\n          <UserCard />\n          <MyNotices />\n        </Wrapper>\n      </Container>\n    </Section>\n  );\n};\n\nexport default Profile;\n"],"names":["Section","styled","_templateObject","_taggedTemplateLiteral","Wrapper","_templateObject2","theme","Title","InputWrapper","_templateObject3","UpperWrapper","_templateObject4","StyledUser","_templateObject5","UserIcon","_templateObject6","EditBtn","_templateObject7","EditIcon","_templateObject8","AvatarBlock","AvatarWrapper","Form","Avatar","_jsxs","children","_jsx","type","name","id","style","display","onChange","e","_e$target$files","target","files","htmlFor","cursor","user","UserBlock","_useState","useState","setModal","_slicedToArray","email","phone","href","sprite","onClick","state","value","readOnly","className","Link","NavLink","PlusIcon","PetsBlock","to","UserCard","Button","MyNoticesWrapper","ButtonWrapper","TextWrapper","Text","Accent","MyNotices","Container"],"sourceRoot":""}