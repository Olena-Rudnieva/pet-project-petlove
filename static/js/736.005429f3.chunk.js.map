{"version":3,"file":"static/js/736.005429f3.chunk.js","mappings":"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","sources":["components/hero/hero.styled.ts","components/hero/hero.tsx","components/newsItem/newsItem.styled.ts","components/newsItem/newsItem.tsx","components/petInfo/petInfo.styled.ts","components/petInfo/petInfo.tsx","pages/profile/profile.styled.ts","pages/profile/components/userCard/userCard.styled.ts","pages/profile/components/userBlock/userBlock.styled.ts","components/avatar/avatar.styled.ts","components/avatar/avatar.tsx","pages/profile/components/userBlock/userBlock.tsx","pages/profile/components/petsList/petsList.styled.ts","pages/profile/components/petsItem/petsItem.styled.ts","pages/profile/components/petsItem/petsItem.tsx","pages/profile/components/petsList/petsList.tsx","pages/profile/components/petsBlock/petsBlock.styled.ts","pages/profile/components/petsBlock/petsBlock.tsx","pages/profile/components/userCard/userCard.tsx","pages/profile/components/myNotices/myNotices.styled.ts","pages/profile/components/favoriteCard/favoriteCard.styled.ts","pages/profile/components/favoriteCard/favoriteCard.tsx","pages/profile/components/myNotices/myNotices.tsx","pages/profile/profile.tsx","redux/pets/petsSelectors.ts"],"sourcesContent":["import styled from 'styled-components';\nimport { theme } from 'constants/theme';\n\nexport const HeroWrapper = styled.div``;\n\nexport const TextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  gap: 24px;\n  background-color: ${theme.colors.accent};\n  padding: 60px 20px;\n  border-radius: 30px;\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    padding: 80px 64px 32px 64px;\n    gap: 73px;\n    border-radius: 60px;\n  }\n`;\n\nexport const Title = styled.h1`\n  color: ${theme.colors.white};\n  font-size: ${theme.fontSizes.xxxl};\n  font-weight: ${theme.fontWeight.bold};\n  line-height: 0.96667;\n  letter-spacing: -2.7px;\n\n  @media (min-width: 768px) {\n    font-size: ${theme.fontSizes.xxxxxl};\n    width: 760px;\n  }\n`;\n\nexport const Text = styled.p`\n  color: ${theme.colors.white};\n  font-size: ${theme.fontSizes.xs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.22222;\n  letter-spacing: -0.36px;\n\n  @media (min-width: 768px) {\n    font-size: ${theme.fontSizes.s};\n    width: 255px;\n  }\n`;\n\nexport const Accent = styled.span`\n  color: ${theme.colors.accentHero};\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 100%;\n  max-width: 1216px;\n  border-radius: 30px;\n\n  @media (min-width: 768px) {\n    border-radius: 60px;\n  }\n`;\n","import heroImgDesktop from 'assets/images/heroImgDesktop.jpg';\nimport heroImgTablet from 'assets/images/heroImgTablet.jpg';\nimport heroImgMobile from 'assets/images/heroImgMobile.jpg';\nimport {\n  Accent,\n  HeroWrapper,\n  Image,\n  Text,\n  TextWrapper,\n  Title,\n} from './hero.styled';\nimport { useMediaQuery } from 'react-responsive';\n\nexport const Hero = () => {\n  const isMobile = useMediaQuery({ query: '(max-width: 767px)' });\n  const isTablet = useMediaQuery({\n    query: '(min-width: 768px) and (max-width: 1279px)',\n  });\n  const isDesktop = useMediaQuery({ query: '(min-width: 1280px)' });\n\n  return (\n    <HeroWrapper>\n      <TextWrapper>\n        <Title>\n          Take good <Accent>care</Accent> of your small pets\n        </Title>\n        <Text>\n          Choosing a pet for your home is a choice that is meant to enrich your\n          life with immeasurable joy and tenderness.\n        </Text>\n      </TextWrapper>\n\n      {isMobile && <Image src={heroImgMobile} alt=\"Girl with a dog\" />}\n      {isTablet && <Image src={heroImgTablet} alt=\"Girl with a dog\" />}\n      {isDesktop && <Image src={heroImgDesktop} alt=\"Girl with a dog\" />}\n    </HeroWrapper>\n  );\n};\n","import { theme } from 'constants/theme';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const NewsItemWrapper = styled.li`\n  width: 100%;\n  max-width: 361px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media (min-width: 768px) {\n    width: 361px;\n    margin-left: 0;\n    margin-right: 0;\n  }\n`;\n\nexport const ImageWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  max-width: 361px;\n  max-height: 226px;\n  border-radius: 15px;\n  overflow: hidden;\n  margin-bottom: 28px;\n\n  @media (min-width: 768px) {\n    width: 361px;\n    height: 226px;\n  }\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const Title = styled.h3`\n  margin-bottom: 12px;\n  font-size: ${theme.fontSizes.xs};\n  font-weight: ${theme.fontWeight.bold};\n  line-height: 20px;\n  letter-spacing: -0.48px;\n  color: ${theme.colors.black};\n\n  @media (min-width: 768px) {\n    font-size: ${theme.fontSizes.m};\n    line-height: 1.3;\n    letter-spacing: -0.6px;\n    margin-bottom: 14px;\n  }\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 18px;\n  font-size: ${theme.fontSizes.xxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 18px;\n  letter-spacing: -0.28px;\n  color: ${theme.colors.black};\n\n  @media (min-width: 768px) {\n    font-size: ${theme.fontSizes.xs};\n    line-height: 1.25;\n    letter-spacing: -0.32px;\n    margin-bottom: 28px;\n  }\n`;\n\nexport const BottomList = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n`;\n\nexport const Date = styled.p`\n  font-size: ${theme.fontSizes.xxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 18px;\n  letter-spacing: -0.28px;\n  color: ${theme.colors.mediumGrey};\n\n  @media (min-width: 768px) {\n    font-size: ${theme.fontSizes.xs};\n    line-height: 1.25;\n    letter-spacing: -0.32px;\n  }\n`;\n\nexport const Link = styled(NavLink)`\n  text-decoration: underline;\n  font-size: ${theme.fontSizes.xxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 18px;\n  letter-spacing: -0.28px;\n  color: ${theme.colors.accent};\n\n  padding: 4px 12px;\n  border-radius: 15px;\n  border: 1px solid transparent;\n  transition: border ${theme.transition};\n\n  &:hover,\n  &:focus {\n    border: 1px solid ${theme.colors.accent};\n  }\n\n  @media (min-width: 768px) {\n    margin-bottom: 32px;\n    font-size: ${theme.fontSizes.xs};\n    line-height: 1.25;\n    letter-spacing: -0.32px;\n  }\n`;\n","import { formattedDateForNews } from 'utils';\nimport {\n  BottomList,\n  Date,\n  Image,\n  ImageWrapper,\n  Link,\n  NewsItemWrapper,\n  Text,\n  Title,\n} from './newsItem.styled';\n\nexport const NewsItem = ({ item }: any) => {\n  const { title, text, imgUrl, url, date } = item;\n\n  return (\n    <NewsItemWrapper>\n      <ImageWrapper>\n        <Image src={imgUrl} alt={title} />\n      </ImageWrapper>\n      <Title>{title}</Title>\n      <Text>{text}</Text>\n      <BottomList>\n        <Date>{formattedDateForNews(date)}</Date>\n        <Link to={url} target=\"_blank\" rel=\"noopener noreferrer\">\n          Read more\n        </Link>\n      </BottomList>\n    </NewsItemWrapper>\n  );\n};\n","import styled from 'styled-components';\nimport { theme } from 'constants/theme';\n\nexport const InfoWrapper = styled.div`\n  position: absolute;\n  left: 61px;\n  bottom: 97px;\n  width: 294px;\n  height: 121px;\n  padding: 16px;\n  display: flex;\n  align-items: flex-start;\n  gap: 8px;\n  background-color: ${theme.colors.white};\n  border-radius: 20px;\n  z-index: 10;\n`;\n\nexport const Avatar = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 14px;\n  background-color: ${theme.colors.beige};\n  border-radius: 50%;\n`;\n\nexport const Image = styled.img`\n  width: 32px;\n  height: 32px;\n`;\n\nexport const TextWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 8px;\n`;\n\nexport const Title = styled.p`\n  font-size: ${theme.fontSizes.xs};\n  font-weight: ${theme.fontWeight.bold};\n  line-height: 1.25;\n  letter-spacing: -0.48px;\n  color: ${theme.colors.accent};\n`;\n\nexport const Text = styled.p`\n  font-size: ${theme.fontSizes.xxxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.16667;\n  letter-spacing: -0.24px;\n  color: ${theme.colors.mediumGrey};\n`;\n\nexport const Accent = styled.span`\n  color: ${theme.colors.black};\n`;\n\nexport const InfoText = styled.p`\n  font-size: ${theme.fontSizes.xxxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.16667;\n  letter-spacing: -0.24px;\n  color: ${theme.colors.darkGrey};\n`;","import { PetBlockInfo } from 'types';\nimport {\n  Accent,\n  Avatar,\n  Image,\n  InfoText,\n  InfoWrapper,\n  Text,\n  TextWrapper,\n  Title,\n} from './petInfo.styled';\n\ninterface PetInfoProps {\n  pet: PetBlockInfo;\n}\n\nexport const PetInfo = ({ pet }: PetInfoProps) => {\n  const { imgURL, name, birthday, title } = pet;\n  return (\n    <InfoWrapper>\n      <Avatar>\n        <Image src={imgURL} alt=\"Avatar\" />\n      </Avatar>\n      <div>\n        <TextWrapper>\n          <Title>{name}</Title>\n          <Text>\n            Birthday: <Accent>{birthday}</Accent>\n          </Text>\n        </TextWrapper>\n        <InfoText>{title}</InfoText>\n      </div>\n    </InfoWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Section = styled.section``;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 32px;\n`;","import styled from 'styled-components';\nimport { theme } from 'constants/theme';\n\nexport const Wrapper = styled.div`\n  background-color: ${theme.colors.white};\n  border-radius: 60px;\n  padding: 40px;\n`;","import styled from 'styled-components';\nimport { theme } from 'constants/theme';\n\nexport const Wrapper = styled.div`\n  margin-bottom: 40px;\n`;\n\nexport const Title = styled.h2`\n  color: ${theme.colors.secondBlack};\n  font-size: ${theme.fontSizes.s};\n  font-weight: ${theme.fontWeight.bold};\n  line-height: 1.33;\n  margin-bottom: 20px;\n`;\n\nexport const InputWrapper = styled.div`\n  margin-bottom: 14px;\n  width: 440px;\n  /* width: 100%; */\n\n  input {\n    width: 100%;\n    padding: 16px;\n    font-size: ${theme.fontSizes.xs};\n    color: ${theme.colors.black};\n    font-weight: ${theme.fontWeight.medium};\n    line-height: 1.25;\n    letter-spacing: -0.48px;\n    border: 1px solid ${theme.colors.accent};\n    border-radius: 30px;\n    box-sizing: border-box;\n    outline: none;\n    transition: border-color ${theme.transition};\n\n    &.filled {\n      border: 1px solid ${theme.colors.accent};\n    }\n\n    &.unfilled {\n      border: 1px solid ${theme.colors.lightGrey};\n    }\n  }\n`;\n\nexport const UpperWrapper = styled.div`\n  display: flex;\n`;\n\nexport const StyledUser = styled.div`\n  display: flex;\n  gap: 4px;\n  justify-content: center;\n  align-items: center;\n  width: 80px;\n  height: 38px;\n  border-radius: 30px;\n  background-color: ${theme.colors.accent};\n  color: ${theme.colors.white};\n  font-size: ${theme.fontSizes.xxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.2857;\n  letter-spacing: -0.28px;\n`;\n\nexport const UserIcon = styled.svg`\n  width: 18px;\n  height: 18px;\n  fill: ${theme.colors.white};\n`;\n\nexport const EditBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 38px;\n  height: 38px;\n  border-radius: 50%;\n  background-color: ${theme.colors.beige};\n  border: none;\n`;\n\nexport const EditIcon = styled.svg`\n  width: 18px;\n  height: 18px;\n  fill: ${theme.colors.accent};\n`;","import styled from 'styled-components';\nimport { theme } from 'constants/theme';\n\nexport const AvatarBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const AvatarWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 110px;\n  height: 110px;\n  background-color: ${theme.colors.beige};\n  border-radius: 50%;\n  margin-left: 85px;\n  margin-right: 127px;\n  overflow: hidden;\n`;\n\nexport const UserIconAvatar = styled.svg`\n  width: 50px;\n  height: 50px;\n  fill: ${theme.colors.accent};\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 100%;\n`;\n","import {\n  AvatarBlock,\n  AvatarWrapper,\n  Image,\n  UserIconAvatar,\n} from './avatar.styled';\nimport sprite from 'assets/sprite.svg';\n\ninterface AvatarProps {\n  avatar: string | null;\n}\n\nexport const Avatar = ({ avatar }: AvatarProps) => {\n  return (\n    <AvatarBlock>\n      <AvatarWrapper>\n        {avatar ? (\n          <Image src={avatar} alt=\"User\" />\n        ) : (\n          <UserIconAvatar>\n            <use href={sprite + '#icon-user'}></use>\n          </UserIconAvatar>\n        )}\n      </AvatarWrapper>\n    </AvatarBlock>\n  );\n};\n","import {\n  EditBtn,\n  EditIcon,\n  InputWrapper,\n  StyledUser,\n  Title,\n  UpperWrapper,\n  UserIcon,\n  Wrapper,\n} from './userBlock.styled';\nimport { useState } from 'react';\nimport sprite from 'assets/sprite.svg';\nimport { Avatar } from 'components/avatar';\nimport { Modal } from 'components';\nimport { ModalEditUser } from 'components/modal/components';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from '../../../../redux/auth';\n\nexport const UserBlock = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const toggleModal = () => {\n    setIsModalOpen(prevState => !prevState);\n  };\n\n  const user = useSelector(selectUser);\n  const { name, email, phone, avatar } = user;\n\n  return (\n    <Wrapper>\n      <UpperWrapper>\n        <StyledUser>\n          <p>User</p>\n          <UserIcon>\n            <use href={sprite + '#icon-user'}></use>\n          </UserIcon>\n        </StyledUser>\n        <Avatar avatar={avatar} />\n        <EditBtn onClick={toggleModal}>\n          <EditIcon>\n            <use href={sprite + '#icon-edit'}></use>\n          </EditIcon>\n        </EditBtn>\n        {isModalOpen && (\n          <Modal isOpen={isModalOpen} onClose={toggleModal} width=\"480px\">\n            <ModalEditUser handleModalToggle={toggleModal} />\n          </Modal>\n        )}\n      </UpperWrapper>\n      <Title>My information</Title>\n\n      <form>\n        <InputWrapper>\n          <label>\n            <input type=\"text\" name=\"name\" value={name} readOnly />\n          </label>\n        </InputWrapper>\n        <InputWrapper>\n          <label>\n            <input type=\"text\" name=\"email\" value={email} readOnly />\n          </label>\n        </InputWrapper>\n        <InputWrapper>\n          <label>\n            <input\n              type=\"text\"\n              name=\"phone\"\n              value={phone || '+380'}\n              readOnly\n              className={phone ? 'filled' : 'unfilled'}\n            />\n          </label>\n        </InputWrapper>\n      </form>\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  margin-bottom: 40px;\n`;\n","import styled from 'styled-components';\nimport { theme } from 'constants/theme';\n\nexport const Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  gap: 25px;\n  margin-bottom: 14px;\n  border-radius: 20px;\n  border: 1px solid ${theme.colors.grey};\n  padding: 20px;\n`;\n\nexport const ImageWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 90px;\n  height: 90px;\n  background-color: ${theme.colors.beige};\n  border-radius: 50%;\n  overflow: hidden;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const PetIcon = styled.svg`\n  width: 44px;\n  height: 44px;\n  fill: ${theme.colors.accent};\n`;\n\nexport const TextWrapper = styled.div`\n  margin-top: 14px;\n`;\n\nexport const Title = styled.h3`\n  font-size: ${theme.fontSizes.xxs};\n  font-weight: ${theme.fontWeight.bold};\n  line-height: 18px;\n  margin-bottom: 12px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  gap: 27px;\n  margin-bottom: 16px;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\n\nexport const Label = styled.p`\n  font-size: ${theme.fontSizes.xxxxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.4;\n  letter-spacing: -0.2px;\n  color: ${theme.colors.mediumGrey};\n`;\n\nexport const Value = styled.p`\n  font-size: ${theme.fontSizes.xxxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.16667;\n  letter-spacing: -0.24px;\n  color: ${theme.colors.black};\n`;\n\nexport const IconWrapper = styled.div`\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 38px;\n  height: 38px;\n  background-color: ${theme.colors.beige};\n  border-radius: 50%;\n`;\n\nexport const DeleteIcon = styled.div`\n  width: 18px;\n  height: 18px;\n  color: ${theme.colors.accent};\n  cursor: pointer;\n`;\n","import { Pet } from 'types';\nimport {\n  DeleteIcon,\n  IconWrapper,\n  Image,\n  ImageWrapper,\n  Label,\n  List,\n  ListItem,\n  PetIcon,\n  TextWrapper,\n  Title,\n  Value,\n  Wrapper,\n} from './petsItem.styled';\nimport sprite from 'assets/sprite.svg';\nimport { TbTrash } from 'react-icons/tb';\nimport { useDispatch } from 'react-redux';\nimport { AppDispatch } from 'redux/store';\nimport { removePet } from '../../../../redux/pets';\nimport { wordFromBigLetter } from 'utils';\n\ninterface PetsItemProps {\n  pet: Pet;\n}\n\nexport const PetsItem = ({ pet }: PetsItemProps) => {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const transformDate = (date: string) => {\n    const [year, month, day] = date.split('-');\n    return `${day}.${month}.${year}`;\n  };\n\n  const details = [\n    { label: 'Name', value: pet.name },\n    { label: 'Birthday', value: transformDate(pet.birthday) },\n    { label: 'Sex', value: wordFromBigLetter(pet.sex) },\n    { label: 'Species', value: wordFromBigLetter(pet.species) },\n  ];\n\n  const handleDelete = () => {\n    if (pet._id) {\n      dispatch(removePet(pet._id));\n    } else {\n      console.error('Pet ID is undefined.');\n    }\n  };\n\n  return (\n    <Wrapper>\n      <ImageWrapper>\n        {pet.imgURL ? (\n          <Image src={pet.imgURL} alt=\"Pet\" />\n        ) : (\n          <PetIcon>\n            <use href={sprite + '#icon-pet'}></use>\n          </PetIcon>\n        )}\n      </ImageWrapper>\n      <TextWrapper>\n        <Title>{pet.name}</Title>\n        <List>\n          {details.map((detail, index) => (\n            <div key={index}>\n              <ListItem>\n                <Label>{detail.label}</Label>\n                <Value> {detail.value}</Value>\n              </ListItem>\n            </div>\n          ))}\n        </List>\n      </TextWrapper>\n\n      <IconWrapper>\n        <DeleteIcon onClick={handleDelete}>\n          <TbTrash />\n        </DeleteIcon>\n      </IconWrapper>\n    </Wrapper>\n  );\n};\n","import { Pet } from 'types';\nimport { selectPets } from '../../../../redux/pets';\nimport { Wrapper } from './petsList.styled';\nimport { useSelector } from 'react-redux';\nimport { PetsItem } from '../petsItem/petsItem';\nimport { useDispatch } from 'react-redux';\nimport { AppDispatch } from 'redux/store';\nimport { useEffect } from 'react';\nimport { fetchPets } from '../../../../redux/pets';\n\nexport const PetsList = () => {\n  const dispatch = useDispatch<AppDispatch>();\n  const pets: Pet[] = useSelector(selectPets);\n\n  useEffect(() => {\n    dispatch(fetchPets());\n  }, [dispatch]);\n\n  return (\n    <Wrapper>\n      {pets.map(pet => (\n        <PetsItem key={pet._id} pet={pet} />\n      ))}\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\nimport { theme } from 'constants/theme';\nimport { NavLink } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  margin-bottom: 40px;\n`;\n\nexport const UpperWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  line-height: 1.33;\n  margin-bottom: 20px;\n`;\n\nexport const Title = styled.h2`\n  color: ${theme.colors.secondBlack};\n  font-size: ${theme.fontSizes.s};\n  font-weight: ${theme.fontWeight.bold};\n`;\n\nexport const Link = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 4px;\n  padding: 10px 20px;\n  font-weight: ${theme.fontWeight.bold};\n  font-size: ${theme.fontSizes.xs};\n  line-height: 1.25;\n  letter-spacing: -0.48px;\n  background-color: ${theme.colors.accent};\n  color: ${theme.colors.white};\n  border-radius: 30px;\n  transition: color ${theme.transition}, background-color ${theme.transition};\n\n  &:hover,\n  :focus {\n    color: ${theme.colors.accent};\n    background-color: ${theme.colors.beige};\n  }\n\n  &:hover svg,\n  :focus svg {\n    stroke: ${theme.colors.accent};\n  }\n`;\n\nexport const PlusIcon = styled.svg`\n  width: 18px;\n  height: 18px;\n  stroke: ${theme.colors.white};\n  transition: stroke ${theme.transition};\n`;","import { PetsList } from '../petsList';\nimport {\n  Link,\n  PlusIcon,\n  Title,\n  UpperWrapper,\n  Wrapper,\n} from './petsBlock.styled';\nimport sprite from 'assets/sprite.svg';\n\nexport const PetsBlock = () => {\n  return (\n    <Wrapper>\n      <UpperWrapper>\n        <Title>My pets</Title>\n        <Link to=\"/add-pet\">\n          Add pet\n          <PlusIcon>\n            <use href={sprite + '#icon-plus'}></use>\n          </PlusIcon>\n        </Link>\n      </UpperWrapper>\n      <PetsList />\n    </Wrapper>\n  );\n};\n","import { Wrapper } from './userCard.styled';\nimport { UserBlock } from '../userBlock';\nimport { PetsBlock } from '../petsBlock';\nimport { Button } from 'ui';\nimport { ButtonSize, ButtonVariant } from 'types';\nimport { Modal } from 'components';\nimport { useState } from 'react';\nimport { ModalApproveAction } from 'components/modal/components';\n\nexport const UserCard = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const toggleModal = () => {\n    setIsModalOpen(prevState => !prevState);\n  };\n\n  return (\n    <Wrapper>\n      <UserBlock />\n      <PetsBlock />\n\n      <Button\n        type={'button'}\n        onClick={toggleModal}\n        size={ButtonSize.small}\n        variant={ButtonVariant.beige}\n      >\n        LOG OUT\n      </Button>\n      {isModalOpen && (\n        <Modal isOpen={isModalOpen} onClose={toggleModal} width=\"448px\">\n          <ModalApproveAction handleModalToggle={toggleModal} />\n        </Modal>\n      )}\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\nimport { theme } from 'constants/theme';\n\nexport const MyNoticesWrapper = styled.div`\n  /* display: flex;\n  justify-content: center;\n  align-items: center; */\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  gap: 8px;\n  margin-bottom: 32px;\n  /* justify-content: center;\n  align-items: center; */\n`;\n\nexport const TextWrapper = styled.div`\n  padding: 180px 135px 135px 103px;\n  /* text-align: center; */\n`;\n\nexport const Text = styled.p`\n  font-size: ${theme.fontSizes.xs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.25;\n  letter-spacing: -0.32px;\n  color: ${theme.colors.black};\n  width: 458px;\n`;\n\nexport const Accent = styled.span`\n  color: ${theme.colors.accent};\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 24px;\n  flex-wrap: wrap;\n`;\n","import { theme } from 'constants/theme';\nimport styled from 'styled-components';\n\nexport const NoticesItemWrapper = styled.li`\n  width: 320px;\n  padding: 24px;\n  border-radius: 16px;\n  background-color: ${theme.colors.white};\n  box-shadow: ${theme.boxShadow.card};\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport const ImageWrapper = styled.div`\n  width: 270px;\n  height: 155px;\n  border-radius: 16px;\n  overflow: hidden;\n  margin-bottom: 24px;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const Title = styled.h3`\n  margin-bottom: 8px;\n  font-size: ${theme.fontSizes.s};\n  font-weight: ${theme.fontWeight.bold};\n  line-height: 1.3333;\n  color: ${theme.colors.secondBlack};\n`;\n\nexport const Text = styled.p`\n  font-size: ${theme.fontSizes.xxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.28571;\n  letter-spacing: -0.28px;\n  color: ${theme.colors.secondBlack};\n  margin-bottom: 32px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  gap: 20px;\n  margin-bottom: 16px;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 2px;\n`;\n\nexport const Label = styled.p`\n  font-size: ${theme.fontSizes.xxxxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.4;\n  letter-spacing: -0.2px;\n  color: ${theme.colors.mediumGrey};\n`;\n\nexport const Value = styled.p`\n  font-size: ${theme.fontSizes.xxxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.16667;\n  letter-spacing: -0.24px;\n  color: ${theme.colors.black};\n`;\n","import { Notice } from 'types';\nimport {\n  Image,\n  ImageWrapper,\n  Label,\n  List,\n  ListItem,\n  NoticesItemWrapper,\n  Text,\n  Title,\n  Value,\n} from './favoriteCard.styled';\n\ninterface FavoriteCardProps {\n  item: Notice;\n}\n\nexport const FavoriteCard = ({ item }: FavoriteCardProps) => {\n  const { title, imgURL, comment } = item;\n\n  const details = [\n    { label: 'Name', value: item.name },\n    { label: 'Birthday', value: item.birthday },\n    { label: 'Sex', value: item.sex },\n    { label: 'Species', value: item.species },\n    { label: 'Category', value: item.category },\n  ];\n\n  return (\n    <NoticesItemWrapper>\n      <ImageWrapper>\n        <Image src={imgURL} alt={title} />\n      </ImageWrapper>\n      <Title>{title}</Title>\n      <List>\n        {details.map((detail, index) => (\n          <ListItem key={index}>\n            <Label>{detail.label}</Label>\n            <Value> {detail.value}</Value>\n          </ListItem>\n        ))}\n      </List>\n      <Text>{comment}</Text>\n    </NoticesItemWrapper>\n  );\n};\n","import { Button } from 'ui';\nimport {\n  Accent,\n  ButtonWrapper,\n  MyNoticesWrapper,\n  Text,\n  TextWrapper,\n  Wrapper,\n} from './myNotices.styled';\nimport { useSelector } from 'react-redux';\nimport { selectFavoriteNotices } from '../../../../redux/auth';\nimport { Notice } from 'types';\nimport { FavoriteCard } from '../favoriteCard';\n\nexport const MyNotices = () => {\n  const authFavoritesNotices = useSelector(selectFavoriteNotices) as Notice[];\n\n  return (\n    <MyNoticesWrapper>\n      <ButtonWrapper>\n        <Button type={'button'}>My favorite pets</Button>\n      </ButtonWrapper>\n      {authFavoritesNotices?.length > 0 ? (\n        <Wrapper>\n          {authFavoritesNotices.map(notice => (\n            <FavoriteCard key={notice._id} item={notice} />\n          ))}\n        </Wrapper>\n      ) : (\n        <TextWrapper>\n          <Text>\n            Oops, <Accent>looks like there aren't any furries</Accent> on our\n            adorable page yet. Do not worry! View your pets on the \"find your\n            favorite pet\" page and add them to your favorites.\n          </Text>\n        </TextWrapper>\n      )}\n    </MyNoticesWrapper>\n  );\n};\n","import { Section, Wrapper } from './profile.styled';\nimport { UserCard } from './components/userCard';\nimport { MyNotices } from './components';\nimport { Container } from 'ui';\nimport { useDispatch } from 'react-redux';\nimport { AppDispatch } from 'redux/store';\nimport { useEffect } from 'react';\nimport { fetchCurrentUserFull } from '../../redux/auth';\n\nconst Profile = () => {\n  const dispatch = useDispatch<AppDispatch>();\n\n  useEffect(() => {\n    dispatch(fetchCurrentUserFull());\n  }, [dispatch]);\n\n  return (\n    <Section>\n      <Container>\n        <Wrapper>\n          <UserCard />\n          <MyNotices />\n        </Wrapper>\n      </Container>\n    </Section>\n  );\n};\n\nexport default Profile;\n","import { RootState } from 'redux/store';\n\nexport const selectPets = (state: RootState) => state.pets.pets;\n"],"names":["HeroWrapper","styled","_templateObject","_taggedTemplateLiteral","TextWrapper","_templateObject2","theme","Title","_templateObject3","Text","_templateObject4","Accent","_templateObject5","Image","_templateObject6","Hero","isMobile","useMediaQuery","query","isTablet","isDesktop","_jsxs","children","_jsx","src","heroImgMobile","alt","heroImgTablet","heroImgDesktop","NewsItemWrapper","ImageWrapper","BottomList","Date","_templateObject7","Link","NavLink","_templateObject8","NewsItem","_ref","item","title","text","imgUrl","url","date","formattedDateForNews","to","target","rel","InfoWrapper","Avatar","InfoText","PetInfo","pet","imgURL","name","birthday","Section","Wrapper","InputWrapper","UpperWrapper","StyledUser","UserIcon","EditBtn","EditIcon","AvatarBlock","AvatarWrapper","UserIconAvatar","avatar","href","sprite","UserBlock","_useState","useState","_useState2","_slicedToArray","isModalOpen","setIsModalOpen","toggleModal","prevState","user","useSelector","selectUser","email","phone","onClick","Modal","isOpen","onClose","width","ModalEditUser","handleModalToggle","type","value","readOnly","className","PetIcon","List","ListItem","Label","_templateObject9","Value","_templateObject10","IconWrapper","_templateObject11","DeleteIcon","_templateObject12","PetsItem","dispatch","useDispatch","details","label","_date$split","split","_date$split2","year","month","day","concat","transformDate","wordFromBigLetter","sex","species","map","detail","index","_id","removePet","console","error","TbTrash","PetsList","pets","selectPets","useEffect","fetchPets","PlusIcon","PetsBlock","UserCard","Button","size","ButtonSize","variant","ButtonVariant","ModalApproveAction","MyNoticesWrapper","ButtonWrapper","NoticesItemWrapper","FavoriteCard","comment","category","MyNotices","authFavoritesNotices","selectFavoriteNotices","length","notice","fetchCurrentUserFull","Container","state"],"sourceRoot":""}