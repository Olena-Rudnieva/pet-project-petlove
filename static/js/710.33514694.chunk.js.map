{"version":3,"file":"static/js/710.33514694.chunk.js","mappings":"gRAIaA,EAAUC,EAAAA,GAAAA,QAAcC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kCAIxBC,EAAUH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,0CAKpBG,EAAkBL,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,4NAEnBK,EAAAA,EAAAA,OAAAA,OACIC,GAQbC,EAAQT,EAAAA,GAAAA,IAAUU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,8D,sFCrBlBS,EAAmBX,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yCAU7BU,EAAqBZ,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,ukBAgBpB,SAAAW,GAAK,OAAIA,EAAMC,iBAAmB,aAAa,IAWnD,SAAAD,GAAK,OAAIA,EAAME,aAAe,aAAa,IAMlDC,EAAahB,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,gFAGxBK,EAAAA,EAAAA,OAAAA,OAICU,EAAWjB,EAAAA,GAAAA,IAAUU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,gFAGtBK,EAAAA,EAAAA,OAAAA,MAICW,EAAelB,EAAAA,GAAAA,IAAUmB,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,gFAG1BK,EAAAA,EAAAA,OAAAA,Q,oBCrDCa,EAAkB,WAC7B,OACEC,EAAAA,EAAAA,MAACV,EAAgB,CAAAW,SAAA,EACfC,EAAAA,EAAAA,KAACX,EAAkB,CAACE,gBAAgB,UAAUC,YAAY,UAASO,UACjED,EAAAA,EAAAA,MAAA,SAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAK,CAACC,KAAK,QAAQC,KAAK,MAAMC,MAAM,YACrCJ,EAAAA,EAAAA,KAAA,QAAAD,UACEC,EAAAA,EAAAA,KAACP,EAAU,CAAAM,UACTC,EAAAA,EAAAA,KAAA,OAAKK,KAAMC,EAAAA,EAAS,2BAM5BN,EAAAA,EAAAA,KAACX,EAAkB,CACjBE,gBAAgB,0BAChBC,YAAY,yBAAwBO,UAEpCD,EAAAA,EAAAA,MAAA,SAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAK,CAACC,KAAK,QAAQC,KAAK,MAAMC,MAAM,UACrCJ,EAAAA,EAAAA,KAAA,QAAAD,UACEC,EAAAA,EAAAA,KAACN,EAAQ,CAAAK,UACPC,EAAAA,EAAAA,KAAA,OAAKK,KAAMC,EAAAA,EAAS,yBAK5BN,EAAAA,EAAAA,KAACX,EAAkB,CAACE,gBAAgB,UAAUC,YAAY,UAASO,UACjED,EAAAA,EAAAA,MAAA,SAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAK,CAACC,KAAK,QAAQC,KAAK,MAAMC,MAAM,WACrCJ,EAAAA,EAAAA,KAAA,QAAAD,UACEC,EAAAA,EAAAA,KAACL,EAAY,CAAAI,UACXC,EAAAA,EAAAA,KAAA,OAAKK,KAAMC,EAAAA,EAAS,8BAOlC,E,sCC9Ca1B,EAAUH,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kFAGXK,EAAAA,EAAAA,OAAAA,OAGTuB,EAAe9B,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,8EAMzB6B,EAAQ/B,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,+GACfK,EAAAA,EAAAA,UAAAA,IACEA,EAAAA,EAAAA,WAAAA,KAGNA,EAAAA,EAAAA,OAAAA,OAGEyB,EAAOhC,EAAAA,GAAAA,EAAQU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,sFACbK,EAAAA,EAAAA,UAAAA,GACEA,EAAAA,EAAAA,WAAAA,KAENA,EAAAA,EAAAA,OAAAA,UA0BE0B,IAvBejC,EAAAA,GAAAA,IAAUmB,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,8MAMhBK,EAAAA,EAAAA,OAAAA,OAMDP,EAAAA,GAAAA,IAAUkC,IAAAA,GAAAhC,EAAAA,EAAAA,GAAA,2CAKRF,EAAAA,GAAAA,IAAUmC,IAAAA,GAAAjC,EAAAA,EAAAA,GAAA,wDAGvBK,EAAAA,EAAAA,OAAAA,QAGiBP,EAAAA,GAAAA,IAAUoC,IAAAA,GAAAlC,EAAAA,EAAAA,GAAA,mCASxBmC,GAAerC,EAAAA,GAAAA,IAAUsC,IAAAA,GAAApC,EAAAA,EAAAA,GAAA,keASrBK,EAAAA,EAAAA,UAAAA,GACJA,EAAAA,EAAAA,OAAAA,MACMA,EAAAA,EAAAA,WAAAA,QAGX,SAAAM,GAAK,OACLA,EAAM0B,SACFhC,EAAAA,EAAAA,OAAAA,IACAM,EAAM2B,WACNjC,EAAAA,EAAAA,OAAAA,MACAA,EAAAA,EAAAA,OAAAA,SAAsB,GAIHA,EAAAA,EAAAA,WAGTA,EAAAA,EAAAA,OAAAA,OAIIA,EAAAA,EAAAA,OAAAA,KAKbkC,GAAYzC,EAAAA,GAAAA,IAAU0C,IAAAA,GAAAxC,EAAAA,EAAAA,GAAA,gKACxBK,EAAAA,EAAAA,OAAAA,IACIA,EAAAA,EAAAA,UAAAA,KACEA,EAAAA,EAAAA,WAAAA,QAiBJoC,IAViB3C,EAAAA,GAAAA,IAAU4C,IAAAA,GAAA1C,EAAAA,EAAAA,GAAA,gKAC7BK,EAAAA,EAAAA,OAAAA,MACIA,EAAAA,EAAAA,UAAAA,KACEA,EAAAA,EAAAA,WAAAA,QAOYP,EAAAA,GAAAA,IAAU6C,IAAAA,GAAA3C,EAAAA,EAAAA,GAAA,kFAM1B4C,GAAe9C,EAAAA,GAAAA,IAAU+C,IAAAA,GAAA7C,EAAAA,EAAAA,GAAA,qIAG1BK,EAAAA,EAAAA,OAAAA,OAOCyC,GAAQhD,EAAAA,GAAAA,MAAYiD,IAAAA,GAAA/C,EAAAA,EAAAA,GAAA,8CAKpBgD,GAAiBlD,EAAAA,GAAAA,IAAUmD,IAAAA,GAAAjD,EAAAA,EAAAA,GAAA,6E,WCxI3BkD,GAAmBC,GAAAA,KAAaC,MAAM,CACjD5B,KAAM2B,GAAAA,KAAaE,SAAS,oBAC5BC,OAAQH,GAAAA,KAAaI,IAAI,uBAAuBC,WAChDC,QAASN,GAAAA,KAAaE,SAAS,uBAC/BK,SAAUP,GAAAA,KAAWE,SAAS,wBAC9BM,MAAOR,GAAAA,KAAaK,WACpBI,IAAKT,GAAAA,KAEFU,MACC,CAAC,OAAQ,SAAU,SACnB,4CAEDR,SAAS,qB,4CCYRS,GAAiB,CACrB,CAAErC,MAAO,MAAOsC,MAAO,OACvB,CAAEtC,MAAO,MAAOsC,MAAO,OACvB,CAAEtC,MAAO,SAAUsC,MAAO,UAC1B,CAAEtC,MAAO,OAAQsC,MAAO,QACxB,CAAEtC,MAAO,OAAQsC,MAAO,QACxB,CAAEtC,MAAO,UAAWsC,MAAO,WAC3B,CAAEtC,MAAO,QAASsC,MAAO,UAYrBC,GAAgC,CACpCxC,KAAM,GACN8B,OAAQ,oBACRG,QAAS,GACTC,SAAU,GACVC,MAAO,GACPC,IAAK,UAGMK,GAAa,WACxB,IAAAC,GAAgCC,EAAAA,GAAAA,UAAsB,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApDR,EAAQU,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAA8CJ,EAAAA,GAAAA,UAAS,CACrD1C,MAAO,GACPsC,MAAO,KACPS,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAHKE,EAAeD,EAAA,GAAEE,EAAkBF,EAAA,GAKpCG,GAAWC,EAAAA,GAAAA,MAMXC,EAAe,CACnBC,QAAS,SAACC,EAAeC,GAAU,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC9BF,GAAQ,IACXG,MAAO,OACPC,QAAS,mBACTC,SAAU,OACVC,MAAO,OACPC,WAAY,MACZC,WAAY,OACZC,cAAe,KACfC,OAAQT,EAAMU,UAAY,oBAAsB,oBAChDC,aAAc,OACdC,UAAW,OACX,UAAW,CACTC,YAAa,YACd,EAEHC,YAAa,SAACf,GAAa,OAAAE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACtBF,GAAQ,IACXM,MAAO,UACPC,WAAY,OAAK,EAEnBS,KAAM,SAAChB,GAAa,OAAAE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACfF,GAAQ,IACXY,aAAc,OACdK,UAAW,KAAG,EAEhBC,OAAQ,SAAClB,EAAeC,GAAU,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC7BF,GAAQ,IACXmB,gBAAiBlB,EAAMmB,WAAa,UAAY,OAChDd,MAAOL,EAAMmB,WAAa,OAAS,OACnCV,OAAQ,OACRG,UAAW,OACX,UAAW,CACTM,gBAAiB,UACjBb,MAAO,SACR,EAEHe,YAAa,SAACrB,GAAa,OAAAE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACtBF,GAAQ,IACXM,MAAO,QAAM,GAyBjB,OACElE,EAAAA,EAAAA,MAAClB,EAAO,CAAAmB,SAAA,EACND,EAAAA,EAAAA,MAACS,EAAY,CAAAR,SAAA,EACXC,EAAAA,EAAAA,KAACQ,EAAK,CAAAT,SAAC,kBACPC,EAAAA,EAAAA,KAACS,EAAI,CAAAV,SAAC,yBAGRC,EAAAA,EAAAA,KAACgF,EAAAA,GAAM,CACLrC,cAAeA,GACfsC,SA9Be,SAAHC,EAAAC,GAGZ,IAFFhF,EAAI+E,EAAJ/E,KAAM8B,EAAMiD,EAANjD,OAAQG,EAAO8C,EAAP9C,QAASE,EAAK4C,EAAL5C,MAAOC,EAAG2C,EAAH3C,IAC9B6C,EAASD,EAATC,UAMIC,EAAU,CACdlF,KAAAA,EACA8B,OAAAA,EACAG,QAAAA,EACAC,SARwBA,EACtBA,EAASiD,cAAcC,MAAM,KAAK,GAClC,GAOFjD,MAAAA,EACAC,IAAAA,GAGFe,GAASkC,EAAAA,GAAAA,IAAOH,IAChBD,GACF,EAYMK,iBAAkB5D,GAAiB9B,SAElC,SAAA2F,GAAA,IAAGC,EAAYD,EAAZC,aAA+BC,GAAXF,EAANG,OAAeH,EAAPI,QAAsBJ,EAAbE,eAAa,OAC9C9F,EAAAA,EAAAA,MAAA,QAAMmF,SAAUU,EAAa5F,SAAA,EAC3BD,EAAAA,EAAAA,MAACY,GAAW,CAAAX,SAAA,EACVC,EAAAA,EAAAA,KAACH,EAAe,KAUhBG,EAAAA,EAAAA,KAACc,GAAY,CAAAf,UACXD,EAAAA,EAAAA,MAAA,SAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAK,CAACC,KAAK,QAAQC,KAAK,QAAQsE,YAAY,WAC7CzE,EAAAA,EAAAA,KAAC+F,EAAAA,GAAY,CAAC5F,KAAK,QAAQ6F,UAAW9E,WAG1ClB,EAAAA,EAAAA,KAACc,GAAY,CAAAf,UACXD,EAAAA,EAAAA,MAAA,SAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAK,CAACC,KAAK,OAAOC,KAAK,OAAOsE,YAAY,gBAC3CzE,EAAAA,EAAAA,KAAC+F,EAAAA,GAAY,CAAC5F,KAAK,OAAO6F,UAAW9E,WAGzCpB,EAAAA,EAAAA,MAAC6B,GAAc,CAAA5B,SAAA,EACbD,EAAAA,EAAAA,MAACgB,GAAY,CAAAf,SAAA,EACXD,EAAAA,EAAAA,MAAC2B,GAAK,CAAA1B,SAAA,EACJC,EAAAA,EAAAA,KAACiG,IAAU,CACTC,SAAU7D,EACV8D,SAAU,SAACC,GACTnD,EAAYmD,GACZR,EACE,WACAQ,EACIA,EAAKC,mBAAmB,QAAS,CAC/BC,IAAK,UACLC,MAAO,UACPC,KAAM,YAER,GAER,EACAC,WAAW,aACXC,gBAAgB,gBAElB1G,EAAAA,EAAAA,KAAC+F,EAAAA,GAAY,CAAC5F,KAAK,WAAW6F,UAAW9E,SAE3ClB,EAAAA,EAAAA,KAACuB,GAAY,CAAAxB,UACXC,EAAAA,EAAAA,KAAA,OAAKK,KAAMC,EAAAA,EAAS,yBAGxBN,EAAAA,EAAAA,KAACc,GAAY,CAAAf,UACXD,EAAAA,EAAAA,MAAC2B,GAAK,CAAA1B,SAAA,EACJC,EAAAA,EAAAA,KAAC2G,EAAAA,GAAM,CACLvG,MAAOgD,EACP+C,SAAU,SAAAvB,GACJA,GAzIxBvB,EA0I0CuB,GACpBgB,EAAc,UAAWhB,EAAOxE,QAEhCwF,EAAc,UAAW,GAE7B,EACAgB,QAASnE,GACTgC,YAAY,iBACZoC,OAAQrD,KAGVxD,EAAAA,EAAAA,KAAC+F,EAAAA,GAAY,CAAC5F,KAAK,UAAU6F,UAAW9E,iBAKhDlB,EAAAA,EAAAA,KAACoB,GAAa,CAAArB,UACZC,EAAAA,EAAAA,KAAC8G,GAAAA,GAGC,CACA5G,KAAM,SACNH,SACD,eAIE,MAKjB,EC5MA,GArBe,WACb,IAAMuD,GAAWC,EAAAA,GAAAA,MAMjB,OAJAwD,EAAAA,GAAAA,YAAU,WACRzD,GAAS0D,EAAAA,GAAAA,MACX,GAAG,CAAC1D,KAGFtD,EAAAA,EAAAA,KAACxB,EAAO,CAAAuB,UACNC,EAAAA,EAAAA,KAACiH,GAAAA,GAAS,CAAAlH,UACRD,EAAAA,EAAAA,MAAClB,EAAO,CAAAmB,SAAA,EACNC,EAAAA,EAAAA,KAAClB,EAAe,CAAAiB,UACdC,EAAAA,EAAAA,KAACd,EAAK,CAACgI,IAAKC,EAAWC,IAAI,WAE7BpH,EAAAA,EAAAA,KAAC4C,GAAU,UAKrB,C,0HC1BayE,EAAa,SAAC1D,GAAgB,OAAKA,EAAM2D,KAAKA,IAAK,E","sources":["pages/addPet/addPet.styled.ts","pages/addPet/components/genderSelection/genderSelection.styled.ts","pages/addPet/components/genderSelection/genderSelection.tsx","pages/addPet/components/addPetForm/addPetForm.styled.ts","pages/addPet/components/addPetForm/addPetFormShema.ts","pages/addPet/components/addPetForm/addPetForm.tsx","pages/addPet/addPet.tsx","redux/pets/petsSelectors.ts"],"sourcesContent":["import styled from 'styled-components';\nimport { theme } from 'constants/theme';\nimport rectangle from 'assets/images/rectangle.png';\n\nexport const Section = styled.section`\n  margin-bottom: 32px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 32px;\n`;\n\nexport const PetBlockWrapper = styled.div`\n  position: relative;\n  background-color: ${theme.colors.accent};\n  background-image: url(${rectangle});\n  background-repeat: no-repeat;\n  background-position: center bottom;\n  width: 592px;\n  height: 654px;\n  border-radius: 60px;\n`;\n\nexport const Image = styled.img`\n  position: absolute;\n  bottom: 0;\n  left: 30px;\n`;","import styled from 'styled-components';\nimport { theme } from 'constants/theme';\n\nexport const SelectionWrapper = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\ninterface StyledRadioWrapperProps {\n  backgroundcolor?: string;\n  bordercolor?: string;\n}\n\nexport const StyledRadioWrapper = styled.div<StyledRadioWrapperProps>`\n  span {\n    width: 40px;\n    height: 40px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 50%;\n  }\n\n  input[type='radio'] {\n    display: none;\n  }\n\n  input[type='radio'] + span {\n    position: relative;\n    background-color: ${props => props.backgroundcolor || 'transparent'};\n  }\n\n  input[type='radio']:checked + span::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 38px;\n    height: 38px;\n    border: 2px solid grey;\n    border-color: ${props => props.bordercolor || 'transparent'};\n    background-color: transparent;\n    border-radius: 50%;\n  }\n`;\n\nexport const FemaleIcon = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: ${theme.colors.white};\n  fill: transparent;\n`;\n\nexport const MaleIcon = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: ${theme.colors.blue};\n  fill: transparent;\n`;\n\nexport const MultipleIcon = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: ${theme.colors.accent};\n  fill: transparent;\n`;\n","import {\n  FemaleIcon,\n  MaleIcon,\n  MultipleIcon,\n  SelectionWrapper,\n  StyledRadioWrapper,\n} from './genderSelection.styled';\nimport { Field } from 'formik';\nimport sprite from 'assets/sprite.svg';\n\nexport const GenderSelection = () => {\n  return (\n    <SelectionWrapper>\n      <StyledRadioWrapper backgroundcolor=\"#eb1035\" bordercolor=\"#892d3e\">\n        <label>\n          <Field type=\"radio\" name=\"sex\" value=\"female\" />\n          <span>\n            <FemaleIcon>\n              <use href={sprite + '#icon-female'}></use>\n            </FemaleIcon>\n          </span>\n        </label>\n      </StyledRadioWrapper>\n\n      <StyledRadioWrapper\n        backgroundcolor=\"rgba(84, 173, 255, 0.1)\"\n        bordercolor=\"rgba(49, 87, 125, 0.3)\"\n      >\n        <label>\n          <Field type=\"radio\" name=\"sex\" value=\"male\" />\n          <span>\n            <MaleIcon>\n              <use href={sprite + '#icon-male'}></use>\n            </MaleIcon>\n          </span>\n        </label>\n      </StyledRadioWrapper>\n      <StyledRadioWrapper backgroundcolor=\"#FFF4DF\" bordercolor=\"#e1c184\">\n        <label>\n          <Field type=\"radio\" name=\"sex\" value=\"mixed\" />\n          <span>\n            <MultipleIcon>\n              <use href={sprite + '#icon-multiple'}></use>\n            </MultipleIcon>\n          </span>\n        </label>\n      </StyledRadioWrapper>\n    </SelectionWrapper>\n  );\n};\n","import { theme } from 'constants/theme';\nimport styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  padding: 60px 80px;\n  border-radius: 60px;\n  background-color: ${theme.colors.white};\n`;\n\nexport const TitleWrapper = styled.div`\n  display: flex;\n  align-items: baseline;\n  margin-bottom: 40px;\n`;\n\nexport const Title = styled.h2`\n  font-size: ${theme.fontSizes.xxl};\n  font-weight: ${theme.fontWeight.bold};\n  line-height: 1;\n  letter-spacing: -0.96px;\n  color: ${theme.colors.black};\n`;\n\nexport const Text = styled.p`\n  font-size: ${theme.fontSizes.xs};\n  font-weight: ${theme.fontWeight.bold};\n  line-height: 1.25;\n  color: ${theme.colors.semiGrey};\n`;\n\nexport const ImageWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 86px;\n  height: 86px;\n  background-color: ${theme.colors.beige};\n  border-radius: 50%;\n  overflow: hidden;\n  margin-bottom: 12px;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const PetIcon = styled.svg`\n  width: 44px;\n  height: 44px;\n  fill: ${theme.colors.accent};\n`;\n\nexport const FormWrapper = styled.div`\n  margin-bottom: 16px;\n`;\n\ninterface InputWrapperProps {\n  haserror?: boolean;\n  hassuccess?: boolean;\n}\n\nexport const InputWrapper = styled.div<InputWrapperProps>`\n  margin-bottom: 16px;\n  max-width: 424px;\n  position: relative;\n  width: 100%;\n\n  input {\n    width: 100%;\n    padding: 16px;\n    font-size: ${theme.fontSizes.xs};\n    color: ${theme.colors.black};\n    font-weight: ${theme.fontWeight.medium};\n    line-height: 1.25;\n    border: 1px solid\n      ${props =>\n        props.haserror\n          ? theme.colors.red\n          : props.hassuccess\n          ? theme.colors.green\n          : theme.colors.lightGrey};\n    border-radius: 30px;\n    box-sizing: border-box;\n    outline: none;\n    transition: border-color ${theme.transition};\n\n    &:focus {\n      border-color: ${theme.colors.accent};\n    }\n\n    .error {\n      border: 1px solid ${theme.colors.red};\n    }\n  }\n`;\n\nexport const ErrorText = styled.div`\n  color: ${theme.colors.red};\n  font-size: ${theme.fontSizes.xxxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.1667;\n  letter-spacing: -0.36px;\n  margin-top: 4px;\n  margin-bottom: 12px;\n`;\n\nexport const SuccessMessage = styled.div`\n  color: ${theme.colors.green};\n  font-size: ${theme.fontSizes.xxxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.1667;\n  letter-spacing: -0.36px;\n  margin-top: 4px;\n  margin-bottom: 12px;\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: inline-block;\n  margin-top: 16px;\n  margin-bottom: 48px;\n`;\n\nexport const CalendarIcon = styled.svg`\n  width: 20px;\n  height: 20px;\n  stroke: ${theme.colors.black};\n  fill: transparent;\n  position: absolute;\n  top: 16px;\n  left: 174px;\n`;\n\nexport const Label = styled.label`\n  width: 210px;\n  display: block;\n`;\n\nexport const OptionsWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  gap: 12px;\n`;\n","import * as yup from 'yup';\n\nexport const AddPetFormSchema = yup.object().shape({\n  name: yup.string().required('Name is required'),\n  imgURL: yup.string().url('Must be a valid URL').optional(),\n  species: yup.string().required('Species is required'),\n  birthday: yup.date().required('Birthday is required'),\n  title: yup.string().optional(),\n  sex: yup\n    .string()\n    .oneOf(\n      ['male', 'female', 'other'],\n      'Sex must be either male, female or other'\n    )\n    .required('Sex is required'),\n});\n","import { Formik, FormikHelpers, Field, ErrorMessage } from 'formik';\nimport { GenderSelection } from '../genderSelection';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport sprite from 'assets/sprite.svg';\nimport Select from 'react-select';\nimport {\n  ButtonWrapper,\n  CalendarIcon,\n  ErrorText,\n  FormWrapper,\n  InputWrapper,\n  Label,\n  OptionsWrapper,\n  Text,\n  Title,\n  TitleWrapper,\n  Wrapper,\n} from './addPetForm.styled';\nimport { AddPetFormSchema } from './addPetFormShema';\nimport { Button } from 'ui';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { AppDispatch } from 'redux/store';\nimport { addPet } from '../../../../redux/pets';\n\nconst speciesOptions = [\n  { value: 'dog', label: 'Dog' },\n  { value: 'cat', label: 'Cat' },\n  { value: 'monkey', label: 'Monkey' },\n  { value: 'bird', label: 'Bird' },\n  { value: 'fish', label: 'Fish' },\n  { value: 'reptile', label: 'Reptile' },\n  { value: 'other', label: 'Other' },\n];\n\ninterface AddPetFormData {\n  name: string;\n  imgURL?: string;\n  species: string;\n  birthday: string;\n  title?: string;\n  sex: string;\n}\n\nconst initialValues: AddPetFormData = {\n  name: '',\n  imgURL: 'https://test.webp',\n  species: '',\n  birthday: '',\n  title: '',\n  sex: 'female',\n};\n\nexport const AddPetForm = () => {\n  const [birthday, setBirthday] = useState<Date | null>(null);\n  const [selectedSpecies, setSelectedSpecies] = useState({\n    value: '',\n    label: '',\n  });\n\n  const dispatch = useDispatch<AppDispatch>();\n\n  const handleSpeciesChange = (selectedOption: any) => {\n    setSelectedSpecies(selectedOption);\n  };\n\n  const customStyles = {\n    control: (provided: any, state: any) => ({\n      ...provided,\n      width: '100%',\n      padding: '8px 8px 8px 14px',\n      fontSize: '16px',\n      color: '#000',\n      fontWeight: '500',\n      lineHeight: '20px',\n      letterSpacing: '3%',\n      border: state.isFocused ? '1px solid #F6B83D' : '1px solid #e0e0e0',\n      borderRadius: '30px',\n      boxShadow: 'none',\n      '&:hover': {\n        borderColor: '#F6B83D',\n      },\n    }),\n    placeholder: (provided: any) => ({\n      ...provided,\n      color: '#a0a0a0',\n      fontWeight: '500',\n    }),\n    menu: (provided: any) => ({\n      ...provided,\n      borderRadius: '10px',\n      marginTop: '0',\n    }),\n    option: (provided: any, state: any) => ({\n      ...provided,\n      backgroundColor: state.isSelected ? '#F6B83D' : '#fff',\n      color: state.isSelected ? '#fff' : '#000',\n      border: 'none',\n      boxShadow: 'none',\n      '&:hover': {\n        backgroundColor: '#F6B83D',\n        color: '#fff',\n      },\n    }),\n    singleValue: (provided: any) => ({\n      ...provided,\n      color: '#000',\n    }),\n  };\n\n  const handleSubmit = (\n    { name, imgURL, species, title, sex }: AddPetFormData,\n    { resetForm }: FormikHelpers<AddPetFormData>\n  ) => {\n    const formattedBirthday = birthday\n      ? birthday.toISOString().split('T')[0]\n      : '';\n\n    const petData = {\n      name,\n      imgURL,\n      species,\n      birthday: formattedBirthday,\n      title,\n      sex,\n    };\n\n    dispatch(addPet(petData));\n    resetForm();\n  };\n\n  return (\n    <Wrapper>\n      <TitleWrapper>\n        <Title>Add my pet /</Title>\n        <Text>Personal details</Text>\n      </TitleWrapper>\n\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={AddPetFormSchema}\n      >\n        {({ handleSubmit, errors, touched, setFieldValue }) => (\n          <form onSubmit={handleSubmit}>\n            <FormWrapper>\n              <GenderSelection />\n              {/* <ImageWrapper>\n                {pet.imgURL ? (\n                  <Image src={pet.imgURL} alt=\"Pet\" />\n                ) : (\n                  <PetIcon>\n                    <use href={sprite + '#icon-pet'}></use>\n                  </PetIcon>\n                )}\n              </ImageWrapper> */}\n              <InputWrapper>\n                <label>\n                  <Field type=\"title\" name=\"title\" placeholder=\"Title\" />\n                  <ErrorMessage name=\"title\" component={ErrorText} />\n                </label>\n              </InputWrapper>\n              <InputWrapper>\n                <label>\n                  <Field type=\"name\" name=\"name\" placeholder=\"Pet's Name\" />\n                  <ErrorMessage name=\"name\" component={ErrorText} />\n                </label>\n              </InputWrapper>\n              <OptionsWrapper>\n                <InputWrapper>\n                  <Label>\n                    <DatePicker\n                      selected={birthday}\n                      onChange={(date: Date | null) => {\n                        setBirthday(date);\n                        setFieldValue(\n                          'birthday',\n                          date\n                            ? date.toLocaleDateString('uk-UA', {\n                                day: '2-digit',\n                                month: '2-digit',\n                                year: 'numeric',\n                              })\n                            : ''\n                        );\n                      }}\n                      dateFormat=\"dd.MM.yyyy\"\n                      placeholderText=\"00.00.0000\"\n                    />\n                    <ErrorMessage name=\"birthday\" component={ErrorText} />\n                  </Label>\n                  <CalendarIcon>\n                    <use href={sprite + '#icon-calendar'}></use>\n                  </CalendarIcon>\n                </InputWrapper>\n                <InputWrapper>\n                  <Label>\n                    <Select\n                      value={selectedSpecies}\n                      onChange={option => {\n                        if (option) {\n                          handleSpeciesChange(option);\n                          setFieldValue('species', option.value);\n                        } else {\n                          setFieldValue('species', '');\n                        }\n                      }}\n                      options={speciesOptions}\n                      placeholder=\"Select Species\"\n                      styles={customStyles}\n                      // defaultValue={speciesOptions[0]}\n                    />\n                    <ErrorMessage name=\"species\" component={ErrorText} />\n                  </Label>\n                </InputWrapper>\n              </OptionsWrapper>\n            </FormWrapper>\n            <ButtonWrapper>\n              <Button\n                // padding={'16px 186px'}\n                // width={'424px'}\n                // height={'52px'}\n                type={'submit'}\n                // handleClick={handleSubmit}\n              >\n                Submit\n              </Button>\n            </ButtonWrapper>\n          </form>\n        )}\n      </Formik>\n    </Wrapper>\n  );\n};\n","import { Image, PetBlockWrapper, Section, Wrapper } from './addPet.styled';\nimport addPetImg from 'assets/images/addPetImg.png';\nimport { AddPetForm } from './components/addPetForm/addPetForm';\nimport { Container } from 'ui';\nimport { useDispatch } from 'react-redux';\nimport { AppDispatch } from 'redux/store';\nimport { useEffect } from 'react';\nimport { fetchPets } from '../../redux/pets';\n\nconst AddPet = () => {\n  const dispatch = useDispatch<AppDispatch>();\n\n  useEffect(() => {\n    dispatch(fetchPets());\n  }, [dispatch]);\n\n  return (\n    <Section>\n      <Container>\n        <Wrapper>\n          <PetBlockWrapper>\n            <Image src={addPetImg} alt=\"Pet\" />\n          </PetBlockWrapper>\n          <AddPetForm />\n        </Wrapper>\n      </Container>\n    </Section>\n  );\n};\n\nexport default AddPet;\n","import { RootState } from 'redux/store';\n\nexport const selectPets = (state: RootState) => state.pets.pets;\n"],"names":["Section","styled","_templateObject","_taggedTemplateLiteral","Wrapper","_templateObject2","PetBlockWrapper","_templateObject3","theme","rectangle","Image","_templateObject4","SelectionWrapper","StyledRadioWrapper","props","backgroundcolor","bordercolor","FemaleIcon","MaleIcon","MultipleIcon","_templateObject5","GenderSelection","_jsxs","children","_jsx","Field","type","name","value","href","sprite","TitleWrapper","Title","Text","FormWrapper","_templateObject6","_templateObject7","_templateObject8","InputWrapper","_templateObject9","haserror","hassuccess","ErrorText","_templateObject10","ButtonWrapper","_templateObject11","_templateObject12","CalendarIcon","_templateObject13","Label","_templateObject14","OptionsWrapper","_templateObject15","AddPetFormSchema","yup","shape","required","imgURL","url","optional","species","birthday","title","sex","oneOf","speciesOptions","label","initialValues","AddPetForm","_useState","useState","_useState2","_slicedToArray","setBirthday","_useState3","_useState4","selectedSpecies","setSelectedSpecies","dispatch","useDispatch","customStyles","control","provided","state","_objectSpread","width","padding","fontSize","color","fontWeight","lineHeight","letterSpacing","border","isFocused","borderRadius","boxShadow","borderColor","placeholder","menu","marginTop","option","backgroundColor","isSelected","singleValue","Formik","onSubmit","_ref","_ref2","resetForm","petData","toISOString","split","addPet","validationSchema","_ref3","handleSubmit","setFieldValue","errors","touched","ErrorMessage","component","DatePicker","selected","onChange","date","toLocaleDateString","day","month","year","dateFormat","placeholderText","Select","options","styles","Button","useEffect","fetchPets","Container","src","addPetImg","alt","selectPets","pets"],"sourceRoot":""}