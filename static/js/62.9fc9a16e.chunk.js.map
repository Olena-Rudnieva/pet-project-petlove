{"version":3,"file":"static/js/62.9fc9a16e.chunk.js","mappings":"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","sources":["components/hero/hero.styled.ts","components/hero/hero.tsx","components/newsItem/newsItem.styled.ts","components/newsItem/newsItem.tsx","components/petInfo/petInfo.styled.ts","components/petInfo/petInfo.tsx","pages/profile/profile.styled.ts","pages/profile/components/userCard/userCard.styled.ts","pages/profile/components/userBlock/userBlock.styled.ts","components/avatar/avatar.styled.ts","components/avatar/avatar.tsx","pages/profile/components/userBlock/userBlock.tsx","pages/profile/components/petsList/petsList.styled.ts","pages/profile/components/petsItem/petsItem.styled.ts","pages/profile/components/petsItem/petsItem.tsx","pages/profile/components/petsList/petsList.tsx","pages/profile/components/petsBlock/petsBlock.styled.ts","pages/profile/components/petsBlock/petsBlock.tsx","pages/profile/components/userCard/userCard.tsx","pages/profile/components/myNotices/myNotices.styled.ts","pages/profile/components/favoriteCard/favoriteCard.styled.ts","pages/profile/components/favoriteCard/favoriteCard.tsx","pages/profile/components/myNotices/myNotices.tsx","pages/profile/profile.tsx","redux/pets/petsSelectors.ts"],"sourcesContent":["import styled from 'styled-components';\nimport { theme } from 'constants/theme';\n\nexport const HeroWrapper = styled.div``;\n\nexport const TextWrapper = styled.div`\n  display: flex;\n  align-items: flex-end;\n  gap: 73px;\n  background-color: ${theme.colors.accent};\n  padding: 80px 64px 32px 64px;\n  border-radius: 60px;\n`;\n\nexport const Title = styled.h1`\n  color: ${theme.colors.white};\n  font-size: ${theme.fontSizes.xxxxxl};\n  font-weight: ${theme.fontWeight.bold};\n  line-height: 0.96667;\n  letter-spacing: -2.7px;\n  width: 760px;\n`;\n\nexport const Text = styled.p`\n  color: ${theme.colors.white};\n  font-size: ${theme.fontSizes.s};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.22222;\n  letter-spacing: -0.36px;\n  width: 255px;\n`;\n\nexport const Accent = styled.span`\n  color: ${theme.colors.accentHero};\n`;\n\nexport const Image = styled.img`\n  border-radius: 60px;\n`;","import heroImg from 'assets/images/heroImg.jpg';\nimport {\n  Accent,\n  HeroWrapper,\n  Image,\n  Text,\n  TextWrapper,\n  Title,\n} from './hero.styled';\n\nexport const Hero = () => {\n  return (\n    <HeroWrapper>\n      <TextWrapper>\n        <Title>\n          Take good <Accent>care</Accent> of your small pets\n        </Title>\n        <Text>\n          Choosing a pet for your home is a choice that is meant to enrich your\n          life with immeasurable joy and tenderness.\n        </Text>\n      </TextWrapper>\n\n      <Image src={heroImg} alt=\"Girl with a dog\" />\n    </HeroWrapper>\n  );\n};\n","import { theme } from 'constants/theme';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const NewsItemWrapper = styled.li`\n  width: 361px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport const ImageWrapper = styled.div`\n  width: 361px;\n  height: 226px;\n  border-radius: 15px;\n  overflow: hidden;\n  margin-bottom: 28px;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const Title = styled.h3`\n  margin-bottom: 14px;\n  font-size: ${theme.fontSizes.m};\n  font-weight: ${theme.fontWeight.bold};\n  line-height: 1.3;\n  letter-spacing: -0.6px;\n  color: ${theme.colors.black};\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 28px;\n  font-size: ${theme.fontSizes.xs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.25;\n  letter-spacing: -0.32px;\n  color: ${theme.colors.black};\n`;\n\nexport const BottomList = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n`;\n\nexport const Date = styled.p`\n  font-size: ${theme.fontSizes.xs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.25;\n  letter-spacing: -0.32px;\n  color: ${theme.colors.mediumGrey};\n`;\n\nexport const Link = styled(NavLink)`\n  margin-bottom: 32px;\n  text-decoration: underline;\n  font-size: ${theme.fontSizes.xs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.25;\n  letter-spacing: -0.32px;\n  color: ${theme.colors.accent};\n\n  padding: 4px 12px;\n  border-radius: 15px;\n  border: 1px solid transparent;\n  transition: border ${theme.transition};\n\n  &:hover,\n  &:focus {\n    border: 1px solid ${theme.colors.accent};\n  }\n`;\n","// import { formattedDate } from 'utils';\nimport {\n  BottomList,\n  Image,\n  ImageWrapper,\n  Link,\n  NewsItemWrapper,\n  Text,\n  Title,\n} from './newsItem.styled';\n\nexport const NewsItem = ({ item }: any) => {\n  const { title, text, imgUrl, url } = item;\n\n  return (\n    <NewsItemWrapper>\n      <div>\n        <ImageWrapper>\n          <Image src={imgUrl} alt={title} />\n        </ImageWrapper>\n        <Title>{title}</Title>\n        <Text>{text}</Text>\n      </div>\n      <BottomList>\n        {/* <Date>{formattedDate(date)}</Date> */}\n        <Link to={url} target=\"_blank\" rel=\"noopener noreferrer\">\n          Read more\n        </Link>\n      </BottomList>\n    </NewsItemWrapper>\n  );\n};\n","import styled from 'styled-components';\nimport { theme } from 'constants/theme';\n\nexport const InfoWrapper = styled.div`\n  position: absolute;\n  left: 61px;\n  bottom: 97px;\n  width: 294px;\n  height: 121px;\n  padding: 16px;\n  display: flex;\n  align-items: flex-start;\n  gap: 8px;\n  background-color: ${theme.colors.white};\n  border-radius: 20px;\n  z-index: 10;\n`;\n\nexport const Avatar = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 14px;\n  background-color: ${theme.colors.beige};\n  border-radius: 50%;\n`;\n\nexport const Image = styled.img`\n  width: 32px;\n  height: 32px;\n`;\n\nexport const TextWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 8px;\n`;\n\nexport const Title = styled.p`\n  font-size: ${theme.fontSizes.xs};\n  font-weight: ${theme.fontWeight.bold};\n  line-height: 1.25;\n  letter-spacing: -0.48px;\n  color: ${theme.colors.accent};\n`;\n\nexport const Text = styled.p`\n  font-size: ${theme.fontSizes.xxxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.16667;\n  letter-spacing: -0.24px;\n  color: ${theme.colors.mediumGrey};\n`;\n\nexport const Accent = styled.span`\n  color: ${theme.colors.black};\n`;\n\nexport const InfoText = styled.p`\n  font-size: ${theme.fontSizes.xxxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.16667;\n  letter-spacing: -0.24px;\n  color: ${theme.colors.darkGrey};\n`;","import { PetBlockInfo } from 'types';\nimport {\n  Accent,\n  Avatar,\n  Image,\n  InfoText,\n  InfoWrapper,\n  Text,\n  TextWrapper,\n  Title,\n} from './petInfo.styled';\n\ninterface PetInfoProps {\n  pet: PetBlockInfo;\n}\n\nexport const PetInfo = ({ pet }: PetInfoProps) => {\n  const { imgURL, name, birthday, title } = pet;\n  return (\n    <InfoWrapper>\n      <Avatar>\n        <Image src={imgURL} alt=\"Avatar\" />\n      </Avatar>\n      <div>\n        <TextWrapper>\n          <Title>{name}</Title>\n          <Text>\n            Birthday: <Accent>{birthday}</Accent>\n          </Text>\n        </TextWrapper>\n        <InfoText>{title}</InfoText>\n      </div>\n    </InfoWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Section = styled.section``;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 32px;\n`;","import styled from 'styled-components';\nimport { theme } from 'constants/theme';\n\nexport const Wrapper = styled.div`\n  background-color: ${theme.colors.white};\n  border-radius: 60px;\n  padding: 40px;\n`;","import styled from 'styled-components';\nimport { theme } from 'constants/theme';\n\nexport const Wrapper = styled.div`\n  margin-bottom: 40px;\n`;\n\nexport const Title = styled.h2`\n  color: ${theme.colors.secondBlack};\n  font-size: ${theme.fontSizes.s};\n  font-weight: ${theme.fontWeight.bold};\n  line-height: 1.33;\n  margin-bottom: 20px;\n`;\n\nexport const InputWrapper = styled.div`\n  margin-bottom: 14px;\n  width: 440px;\n  /* width: 100%; */\n\n  input {\n    width: 100%;\n    padding: 16px;\n    font-size: ${theme.fontSizes.xs};\n    color: ${theme.colors.black};\n    font-weight: ${theme.fontWeight.medium};\n    line-height: 1.25;\n    letter-spacing: -0.48px;\n    border: 1px solid ${theme.colors.accent};\n    border-radius: 30px;\n    box-sizing: border-box;\n    outline: none;\n    transition: border-color ${theme.transition};\n\n    &.filled {\n      border: 1px solid ${theme.colors.accent};\n    }\n\n    &.unfilled {\n      border: 1px solid ${theme.colors.lightGrey};\n    }\n  }\n`;\n\nexport const UpperWrapper = styled.div`\n  display: flex;\n`;\n\nexport const StyledUser = styled.div`\n  display: flex;\n  gap: 4px;\n  justify-content: center;\n  align-items: center;\n  width: 80px;\n  height: 38px;\n  border-radius: 30px;\n  background-color: ${theme.colors.accent};\n  color: ${theme.colors.white};\n  font-size: ${theme.fontSizes.xxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.2857;\n  letter-spacing: -0.28px;\n`;\n\nexport const UserIcon = styled.svg`\n  width: 18px;\n  height: 18px;\n  fill: ${theme.colors.white};\n`;\n\nexport const EditBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 38px;\n  height: 38px;\n  border-radius: 50%;\n  background-color: ${theme.colors.beige};\n  border: none;\n`;\n\nexport const EditIcon = styled.svg`\n  width: 18px;\n  height: 18px;\n  fill: ${theme.colors.accent};\n`;","import styled from 'styled-components';\nimport { theme } from 'constants/theme';\n\nexport const AvatarBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const AvatarWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 110px;\n  height: 110px;\n  background-color: ${theme.colors.beige};\n  border-radius: 50%;\n  margin-left: 85px;\n  margin-right: 127px;\n  overflow: hidden;\n`;\n\nexport const UserIconAvatar = styled.svg`\n  width: 50px;\n  height: 50px;\n  fill: ${theme.colors.accent};\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 100%;\n`;\n","import {\n  AvatarBlock,\n  AvatarWrapper,\n  Image,\n  UserIconAvatar,\n} from './avatar.styled';\nimport sprite from 'assets/sprite.svg';\n\ninterface AvatarProps {\n  avatar: string | null;\n}\n\nexport const Avatar = ({ avatar }: AvatarProps) => {\n  return (\n    <AvatarBlock>\n      <AvatarWrapper>\n        {avatar ? (\n          <Image src={avatar} alt=\"User\" />\n        ) : (\n          <UserIconAvatar>\n            <use href={sprite + '#icon-user'}></use>\n          </UserIconAvatar>\n        )}\n      </AvatarWrapper>\n    </AvatarBlock>\n  );\n};\n","import {\n  EditBtn,\n  EditIcon,\n  InputWrapper,\n  StyledUser,\n  Title,\n  UpperWrapper,\n  UserIcon,\n  Wrapper,\n} from './userBlock.styled';\nimport { useState } from 'react';\nimport sprite from 'assets/sprite.svg';\nimport { Avatar } from 'components/avatar';\nimport { Modal } from 'components';\nimport { ModalEditUser } from 'components/modal/components';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from '../../../../redux/auth';\n\nexport const UserBlock = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const toggleModal = () => {\n    setIsModalOpen(prevState => !prevState);\n  };\n\n  const user = useSelector(selectUser);\n  const { name, email, phone, avatar } = user;\n\n  return (\n    <Wrapper>\n      <UpperWrapper>\n        <StyledUser>\n          <p>User</p>\n          <UserIcon>\n            <use href={sprite + '#icon-user'}></use>\n          </UserIcon>\n        </StyledUser>\n        <Avatar avatar={avatar} />\n        <EditBtn onClick={toggleModal}>\n          <EditIcon>\n            <use href={sprite + '#icon-edit'}></use>\n          </EditIcon>\n        </EditBtn>\n        {isModalOpen && (\n          <Modal isOpen={isModalOpen} onClose={toggleModal} width=\"480px\">\n            <ModalEditUser handleModalToggle={toggleModal} />\n          </Modal>\n        )}\n      </UpperWrapper>\n      <Title>My information</Title>\n\n      <form>\n        <InputWrapper>\n          <label>\n            <input type=\"text\" name=\"name\" value={name} readOnly />\n          </label>\n        </InputWrapper>\n        <InputWrapper>\n          <label>\n            <input type=\"text\" name=\"email\" value={email} readOnly />\n          </label>\n        </InputWrapper>\n        <InputWrapper>\n          <label>\n            <input\n              type=\"text\"\n              name=\"phone\"\n              value={phone || '+380'}\n              readOnly\n              className={phone ? 'filled' : 'unfilled'}\n            />\n          </label>\n        </InputWrapper>\n      </form>\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  margin-bottom: 40px;\n`;\n","import styled from 'styled-components';\nimport { theme } from 'constants/theme';\n\nexport const Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  gap: 25px;\n  margin-bottom: 14px;\n  border-radius: 20px;\n  border: 1px solid ${theme.colors.grey};\n  padding: 20px;\n`;\n\nexport const ImageWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 90px;\n  height: 90px;\n  background-color: ${theme.colors.beige};\n  border-radius: 50%;\n  overflow: hidden;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const PetIcon = styled.svg`\n  width: 44px;\n  height: 44px;\n  fill: ${theme.colors.accent};\n`;\n\nexport const TextWrapper = styled.div`\n  margin-top: 14px;\n`;\n\nexport const Title = styled.h3`\n  font-size: ${theme.fontSizes.xxs};\n  font-weight: ${theme.fontWeight.bold};\n  line-height: 18px;\n  margin-bottom: 12px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  gap: 27px;\n  margin-bottom: 16px;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\n\nexport const Label = styled.p`\n  font-size: ${theme.fontSizes.xxxxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.4;\n  letter-spacing: -0.2px;\n  color: ${theme.colors.mediumGrey};\n`;\n\nexport const Value = styled.p`\n  font-size: ${theme.fontSizes.xxxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.16667;\n  letter-spacing: -0.24px;\n  color: ${theme.colors.black};\n`;\n\nexport const IconWrapper = styled.div`\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 38px;\n  height: 38px;\n  background-color: ${theme.colors.beige};\n  border-radius: 50%;\n`;\n\nexport const DeleteIcon = styled.div`\n  width: 18px;\n  height: 18px;\n  color: ${theme.colors.accent};\n  cursor: pointer;\n`;\n","import { Pet } from 'types';\nimport {\n  DeleteIcon,\n  IconWrapper,\n  Image,\n  ImageWrapper,\n  Label,\n  List,\n  ListItem,\n  PetIcon,\n  TextWrapper,\n  Title,\n  Value,\n  Wrapper,\n} from './petsItem.styled';\nimport sprite from 'assets/sprite.svg';\nimport { TbTrash } from 'react-icons/tb';\nimport { useDispatch } from 'react-redux';\nimport { AppDispatch } from 'redux/store';\nimport { removePet } from '../../../../redux/pets';\nimport { wordFromBigLetter } from 'utils';\n\ninterface PetsItemProps {\n  pet: Pet;\n}\n\nexport const PetsItem = ({ pet }: PetsItemProps) => {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const transformDate = (date: string) => {\n    const [year, month, day] = date.split('-');\n    return `${day}.${month}.${year}`;\n  };\n\n  const details = [\n    { label: 'Name', value: pet.name },\n    { label: 'Birthday', value: transformDate(pet.birthday) },\n    { label: 'Sex', value: wordFromBigLetter(pet.sex) },\n    { label: 'Species', value: wordFromBigLetter(pet.species) },\n  ];\n\n  const handleDelete = () => {\n    if (pet._id) {\n      dispatch(removePet(pet._id));\n    } else {\n      console.error('Pet ID is undefined.');\n    }\n  };\n\n  return (\n    <Wrapper>\n      <ImageWrapper>\n        {pet.imgURL ? (\n          <Image src={pet.imgURL} alt=\"Pet\" />\n        ) : (\n          <PetIcon>\n            <use href={sprite + '#icon-pet'}></use>\n          </PetIcon>\n        )}\n      </ImageWrapper>\n      <TextWrapper>\n        <Title>{pet.name}</Title>\n        <List>\n          {details.map((detail, index) => (\n            <div key={index}>\n              <ListItem>\n                <Label>{detail.label}</Label>\n                <Value> {detail.value}</Value>\n              </ListItem>\n            </div>\n          ))}\n        </List>\n      </TextWrapper>\n\n      <IconWrapper>\n        <DeleteIcon onClick={handleDelete}>\n          <TbTrash />\n        </DeleteIcon>\n      </IconWrapper>\n    </Wrapper>\n  );\n};\n","import { Pet } from 'types';\nimport { selectPets } from '../../../../redux/pets';\nimport { Wrapper } from './petsList.styled';\nimport { useSelector } from 'react-redux';\nimport { PetsItem } from '../petsItem/petsItem';\nimport { useDispatch } from 'react-redux';\nimport { AppDispatch } from 'redux/store';\nimport { useEffect } from 'react';\nimport { fetchPets } from '../../../../redux/pets';\n\nexport const PetsList = () => {\n  const dispatch = useDispatch<AppDispatch>();\n  const pets: Pet[] = useSelector(selectPets);\n\n  useEffect(() => {\n    dispatch(fetchPets());\n  }, [dispatch]);\n\n  return (\n    <Wrapper>\n      {pets.map(pet => (\n        <PetsItem key={pet._id} pet={pet} />\n      ))}\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\nimport { theme } from 'constants/theme';\nimport { NavLink } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  margin-bottom: 40px;\n`;\n\nexport const UpperWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  line-height: 1.33;\n  margin-bottom: 20px;\n`;\n\nexport const Title = styled.h2`\n  color: ${theme.colors.secondBlack};\n  font-size: ${theme.fontSizes.s};\n  font-weight: ${theme.fontWeight.bold};\n`;\n\nexport const Link = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 4px;\n  padding: 10px 20px;\n  font-weight: ${theme.fontWeight.bold};\n  font-size: ${theme.fontSizes.xs};\n  line-height: 1.25;\n  letter-spacing: -0.48px;\n  background-color: ${theme.colors.accent};\n  color: ${theme.colors.white};\n  border-radius: 30px;\n  transition: color ${theme.transition}, background-color ${theme.transition};\n\n  &:hover,\n  :focus {\n    color: ${theme.colors.accent};\n    background-color: ${theme.colors.beige};\n  }\n\n  &:hover svg,\n  :focus svg {\n    stroke: ${theme.colors.accent};\n  }\n`;\n\nexport const PlusIcon = styled.svg`\n  width: 18px;\n  height: 18px;\n  stroke: ${theme.colors.white};\n  transition: stroke ${theme.transition};\n`;","import { PetsList } from '../petsList';\nimport {\n  Link,\n  PlusIcon,\n  Title,\n  UpperWrapper,\n  Wrapper,\n} from './petsBlock.styled';\nimport sprite from 'assets/sprite.svg';\n\nexport const PetsBlock = () => {\n  return (\n    <Wrapper>\n      <UpperWrapper>\n        <Title>My pets</Title>\n        <Link to=\"/add-pet\">\n          Add pet\n          <PlusIcon>\n            <use href={sprite + '#icon-plus'}></use>\n          </PlusIcon>\n        </Link>\n      </UpperWrapper>\n      <PetsList />\n    </Wrapper>\n  );\n};\n","import { Wrapper } from './userCard.styled';\nimport { UserBlock } from '../userBlock';\nimport { PetsBlock } from '../petsBlock';\nimport { Button } from 'ui';\nimport { ButtonSize, ButtonVariant } from 'types';\nimport { Modal } from 'components';\nimport { useState } from 'react';\nimport { ModalApproveAction } from 'components/modal/components';\n\nexport const UserCard = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const toggleModal = () => {\n    setIsModalOpen(prevState => !prevState);\n  };\n\n  return (\n    <Wrapper>\n      <UserBlock />\n      <PetsBlock />\n\n      <Button\n        type={'button'}\n        onClick={toggleModal}\n        size={ButtonSize.small}\n        variant={ButtonVariant.beige}\n      >\n        LOG OUT\n      </Button>\n      {isModalOpen && (\n        <Modal isOpen={isModalOpen} onClose={toggleModal} width=\"448px\">\n          <ModalApproveAction handleModalToggle={toggleModal} />\n        </Modal>\n      )}\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\nimport { theme } from 'constants/theme';\n\nexport const MyNoticesWrapper = styled.div`\n  /* display: flex;\n  justify-content: center;\n  align-items: center; */\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  gap: 8px;\n  margin-bottom: 32px;\n  /* justify-content: center;\n  align-items: center; */\n`;\n\nexport const TextWrapper = styled.div`\n  padding: 180px 135px 135px 103px;\n  /* text-align: center; */\n`;\n\nexport const Text = styled.p`\n  font-size: ${theme.fontSizes.xs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.25;\n  letter-spacing: -0.32px;\n  color: ${theme.colors.black};\n  width: 458px;\n`;\n\nexport const Accent = styled.span`\n  color: ${theme.colors.accent};\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 24px;\n  flex-wrap: wrap;\n`;\n","import { theme } from 'constants/theme';\nimport styled from 'styled-components';\n\nexport const NoticesItemWrapper = styled.li`\n  width: 320px;\n  padding: 24px;\n  border-radius: 16px;\n  background-color: ${theme.colors.white};\n  box-shadow: ${theme.boxShadow.card};\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport const ImageWrapper = styled.div`\n  width: 270px;\n  height: 155px;\n  border-radius: 16px;\n  overflow: hidden;\n  margin-bottom: 24px;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const Title = styled.h3`\n  margin-bottom: 8px;\n  font-size: ${theme.fontSizes.s};\n  font-weight: ${theme.fontWeight.bold};\n  line-height: 1.3333;\n  color: ${theme.colors.secondBlack};\n`;\n\nexport const Text = styled.p`\n  font-size: ${theme.fontSizes.xxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.28571;\n  letter-spacing: -0.28px;\n  color: ${theme.colors.secondBlack};\n  margin-bottom: 32px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  gap: 20px;\n  margin-bottom: 16px;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 2px;\n`;\n\nexport const Label = styled.p`\n  font-size: ${theme.fontSizes.xxxxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.4;\n  letter-spacing: -0.2px;\n  color: ${theme.colors.mediumGrey};\n`;\n\nexport const Value = styled.p`\n  font-size: ${theme.fontSizes.xxxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.16667;\n  letter-spacing: -0.24px;\n  color: ${theme.colors.black};\n`;\n","import { Notice } from 'types';\nimport {\n  Image,\n  ImageWrapper,\n  Label,\n  List,\n  ListItem,\n  NoticesItemWrapper,\n  Text,\n  Title,\n  Value,\n} from './favoriteCard.styled';\n\ninterface FavoriteCardProps {\n  item: Notice;\n}\n\nexport const FavoriteCard = ({ item }: FavoriteCardProps) => {\n  const { title, imgURL, comment } = item;\n\n  const details = [\n    { label: 'Name', value: item.name },\n    { label: 'Birthday', value: item.birthday },\n    { label: 'Sex', value: item.sex },\n    { label: 'Species', value: item.species },\n    { label: 'Category', value: item.category },\n  ];\n\n  return (\n    <NoticesItemWrapper>\n      <ImageWrapper>\n        <Image src={imgURL} alt={title} />\n      </ImageWrapper>\n      <Title>{title}</Title>\n      <List>\n        {details.map((detail, index) => (\n          <ListItem key={index}>\n            <Label>{detail.label}</Label>\n            <Value> {detail.value}</Value>\n          </ListItem>\n        ))}\n      </List>\n      <Text>{comment}</Text>\n    </NoticesItemWrapper>\n  );\n};\n","import { Button } from 'ui';\nimport {\n  Accent,\n  ButtonWrapper,\n  MyNoticesWrapper,\n  Text,\n  TextWrapper,\n  Wrapper,\n} from './myNotices.styled';\nimport { useSelector } from 'react-redux';\nimport { selectFavoriteNotices } from '../../../../redux/auth';\nimport { Notice } from 'types';\nimport { FavoriteCard } from '../favoriteCard';\n\nexport const MyNotices = () => {\n  const authFavoritesNotices = useSelector(selectFavoriteNotices) as Notice[];\n\n  return (\n    <MyNoticesWrapper>\n      <ButtonWrapper>\n        <Button type={'button'}>My favorite pets</Button>\n      </ButtonWrapper>\n      {authFavoritesNotices?.length > 0 ? (\n        <Wrapper>\n          {authFavoritesNotices.map(notice => (\n            <FavoriteCard key={notice._id} item={notice} />\n          ))}\n        </Wrapper>\n      ) : (\n        <TextWrapper>\n          <Text>\n            Oops, <Accent>looks like there aren't any furries</Accent> on our\n            adorable page yet. Do not worry! View your pets on the \"find your\n            favorite pet\" page and add them to your favorites.\n          </Text>\n        </TextWrapper>\n      )}\n    </MyNoticesWrapper>\n  );\n};\n","import { Section, Wrapper } from './profile.styled';\nimport { UserCard } from './components/userCard';\nimport { MyNotices } from './components';\nimport { Container } from 'ui';\nimport { useDispatch } from 'react-redux';\nimport { AppDispatch } from 'redux/store';\nimport { useEffect } from 'react';\nimport { fetchCurrentUserFull } from '../../redux/auth';\n\nconst Profile = () => {\n  const dispatch = useDispatch<AppDispatch>();\n\n  useEffect(() => {\n    dispatch(fetchCurrentUserFull());\n  }, [dispatch]);\n\n  return (\n    <Section>\n      <Container>\n        <Wrapper>\n          <UserCard />\n          <MyNotices />\n        </Wrapper>\n      </Container>\n    </Section>\n  );\n};\n\nexport default Profile;\n","import { RootState } from 'redux/store';\n\nexport const selectPets = (state: RootState) => state.pets.pets;\n"],"names":["HeroWrapper","styled","_templateObject","_taggedTemplateLiteral","TextWrapper","_templateObject2","theme","Title","_templateObject3","Text","_templateObject4","Accent","_templateObject5","Image","_templateObject6","Hero","_jsxs","children","_jsx","src","heroImg","alt","NewsItemWrapper","ImageWrapper","BottomList","Link","_templateObject7","NavLink","_templateObject8","NewsItem","_ref","item","title","text","imgUrl","url","to","target","rel","InfoWrapper","Avatar","InfoText","PetInfo","pet","imgURL","name","birthday","Section","Wrapper","InputWrapper","UpperWrapper","StyledUser","UserIcon","EditBtn","EditIcon","AvatarBlock","AvatarWrapper","UserIconAvatar","avatar","href","sprite","UserBlock","_useState","useState","_useState2","_slicedToArray","isModalOpen","setIsModalOpen","toggleModal","prevState","user","useSelector","selectUser","email","phone","onClick","Modal","isOpen","onClose","width","ModalEditUser","handleModalToggle","type","value","readOnly","className","PetIcon","List","ListItem","Label","_templateObject9","Value","_templateObject10","IconWrapper","_templateObject11","DeleteIcon","_templateObject12","PetsItem","dispatch","useDispatch","details","label","date","_date$split","split","_date$split2","year","month","day","concat","transformDate","wordFromBigLetter","sex","species","map","detail","index","_id","removePet","console","error","TbTrash","PetsList","pets","selectPets","useEffect","fetchPets","PlusIcon","PetsBlock","UserCard","Button","size","ButtonSize","variant","ButtonVariant","ModalApproveAction","MyNoticesWrapper","ButtonWrapper","NoticesItemWrapper","FavoriteCard","comment","category","MyNotices","authFavoritesNotices","selectFavoriteNotices","length","notice","fetchCurrentUserFull","Container","state"],"sourceRoot":""}