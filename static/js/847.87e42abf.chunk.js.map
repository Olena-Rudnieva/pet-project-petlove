{"version":3,"file":"static/js/847.87e42abf.chunk.js","mappings":"qYAGaA,EAAcC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,QAExBC,EAAcH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,sJAIfG,EAAAA,EAAAA,OAAAA,QAKTC,EAAQN,EAAAA,GAAAA,GAASO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,qIACnBG,EAAAA,EAAAA,OAAAA,MACIA,EAAAA,EAAAA,UAAAA,OACEA,EAAAA,EAAAA,WAAAA,MAMJG,EAAOR,EAAAA,GAAAA,EAAQS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,sIACjBG,EAAAA,EAAAA,OAAAA,MACIA,EAAAA,EAAAA,UAAAA,EACEA,EAAAA,EAAAA,WAAAA,QAMJK,EAASV,EAAAA,GAAAA,KAAWW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,wBACtBG,EAAAA,EAAAA,OAAAA,YAGEO,EAAQZ,EAAAA,GAAAA,IAAUa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,kC,UC1BlBY,EAAO,WAClB,OACEC,EAAAA,EAAAA,MAAChB,EAAW,CAAAiB,SAAA,EACVD,EAAAA,EAAAA,MAACZ,EAAW,CAAAa,SAAA,EACVD,EAAAA,EAAAA,MAACT,EAAK,CAAAU,SAAA,CAAC,cACKC,EAAAA,EAAAA,KAACP,EAAM,CAAAM,SAAC,SAAa,0BAEjCC,EAAAA,EAAAA,KAACT,EAAI,CAAAQ,SAAC,yHAMRC,EAAAA,EAAAA,KAACL,EAAK,CAACM,IAAKC,EAASC,IAAI,sBAG/B,E,qCCtBaC,EAAkBrB,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2GAO3BoB,EAAetB,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,kHAQzBU,EAAQZ,EAAAA,GAAAA,IAAUO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,2CAKlBI,EAAQN,EAAAA,GAAAA,GAASS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,wIAEfG,EAAAA,EAAAA,UAAAA,EACEA,EAAAA,EAAAA,WAAAA,KAGNA,EAAAA,EAAAA,OAAAA,OAGEG,EAAOR,EAAAA,GAAAA,EAAQW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,0IAEbG,EAAAA,EAAAA,UAAAA,GACEA,EAAAA,EAAAA,WAAAA,OAGNA,EAAAA,EAAAA,OAAAA,OAGEkB,EAAavB,EAAAA,GAAAA,IAAUa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,yFAcvBsB,GAROxB,EAAAA,GAAAA,EAAQyB,IAAAA,GAAAvB,EAAAA,EAAAA,GAAA,kHACbG,EAAAA,EAAAA,UAAAA,GACEA,EAAAA,EAAAA,WAAAA,OAGNA,EAAAA,EAAAA,OAAAA,aAGSL,EAAAA,EAAAA,IAAO0B,EAAAA,GAAP1B,CAAe2B,IAAAA,GAAAzB,EAAAA,EAAAA,GAAA,kVAGpBG,EAAAA,EAAAA,UAAAA,GACEA,EAAAA,EAAAA,WAAAA,OAGNA,EAAAA,EAAAA,OAAAA,OAKYA,EAAAA,EAAAA,WAICA,EAAAA,EAAAA,OAAAA,SC7DXuB,EAAW,SAAHC,GAAuB,IAAjBC,EAAID,EAAJC,KACjBC,EAA6BD,EAA7BC,MAAOC,EAAsBF,EAAtBE,KAAMC,EAAgBH,EAAhBG,OAAQC,EAAQJ,EAARI,IAE7B,OACEnB,EAAAA,EAAAA,MAACM,EAAe,CAAAL,SAAA,EACdD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACK,EAAY,CAAAN,UACXC,EAAAA,EAAAA,KAACL,EAAK,CAACM,IAAKe,EAAQb,IAAKW,OAE3Bd,EAAAA,EAAAA,KAACX,EAAK,CAAAU,SAAEe,KACRd,EAAAA,EAAAA,KAACT,EAAI,CAAAQ,SAAEgB,QAETf,EAAAA,EAAAA,KAACM,EAAU,CAAAP,UAETC,EAAAA,EAAAA,KAACO,EAAI,CAACW,GAAID,EAAKE,OAAO,SAASC,IAAI,sBAAqBrB,SAAC,kBAMjE,EC5BasB,EAActC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kPAUfG,EAAAA,EAAAA,OAAAA,OAKTkC,EAASvC,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,kJAKVG,EAAAA,EAAAA,OAAAA,OAITO,EAAQZ,EAAAA,GAAAA,IAAUO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,2CAKlBC,EAAcH,EAAAA,GAAAA,IAAUS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,8GAOxBI,EAAQN,EAAAA,GAAAA,EAAQW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,kHACdG,EAAAA,EAAAA,UAAAA,GACEA,EAAAA,EAAAA,WAAAA,KAGNA,EAAAA,EAAAA,OAAAA,QAGEG,EAAOR,EAAAA,GAAAA,EAAQa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,qHACbG,EAAAA,EAAAA,UAAAA,KACEA,EAAAA,EAAAA,WAAAA,OAGNA,EAAAA,EAAAA,OAAAA,YAGEK,EAASV,EAAAA,GAAAA,KAAWyB,IAAAA,GAAAvB,EAAAA,EAAAA,GAAA,wBACtBG,EAAAA,EAAAA,OAAAA,OAGEmC,GAAWxC,EAAAA,GAAAA,EAAQ2B,IAAAA,GAAAzB,EAAAA,EAAAA,GAAA,qHACjBG,EAAAA,EAAAA,UAAAA,KACEA,EAAAA,EAAAA,WAAAA,OAGNA,EAAAA,EAAAA,OAAAA,UChDEoC,GAAU,SAAHZ,GAA+B,IAAzBa,EAAGb,EAAHa,IAChBC,EAAkCD,EAAlCC,OAAQC,EAA0BF,EAA1BE,KAAMC,EAAoBH,EAApBG,SAAUd,EAAUW,EAAVX,MAChC,OACEhB,EAAAA,EAAAA,MAACuB,EAAW,CAAAtB,SAAA,EACVC,EAAAA,EAAAA,KAACsB,EAAM,CAAAvB,UACLC,EAAAA,EAAAA,KAACL,EAAK,CAACM,IAAKyB,EAAQvB,IAAI,cAE1BL,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAACZ,EAAW,CAAAa,SAAA,EACVC,EAAAA,EAAAA,KAACX,EAAK,CAAAU,SAAE4B,KACR7B,EAAAA,EAAAA,MAACP,EAAI,CAAAQ,SAAA,CAAC,cACMC,EAAAA,EAAAA,KAACP,EAAM,CAAAM,SAAE6B,WAGvB5B,EAAAA,EAAAA,KAACuB,GAAQ,CAAAxB,SAAEe,SAInB,E,6GC/Bae,EAAkB,CAC7BH,OAAQI,EACRH,KAAM,OACNC,SAAU,aACVd,MACE,kHAGSiB,EAAW,CACtBL,OAAQM,EACRL,KAAM,OACNC,SAAU,aACVd,MACE,8I,gJCZSmB,EAAUlD,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0CAKpBiD,EAAkBnD,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,4NAEnBG,EAAAA,EAAAA,OAAAA,OACI+C,GAQbxC,EAAQZ,EAAAA,GAAAA,IAAUO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,8D,yGCflBgD,EAAUlD,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kFAGXG,EAAAA,EAAAA,OAAAA,OAGTgD,EAAerD,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,kCAIzBM,EAAOR,EAAAA,GAAAA,EAAQO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,2IACbG,EAAAA,EAAAA,UAAAA,EACEA,EAAAA,EAAAA,WAAAA,OAGNA,EAAAA,EAAAA,OAAAA,OAIEiD,EAActD,EAAAA,GAAAA,IAAUS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,kCASxBqD,EAAevD,EAAAA,GAAAA,IAAUW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,keASrBG,EAAAA,EAAAA,UAAAA,GACJA,EAAAA,EAAAA,OAAAA,MACMA,EAAAA,EAAAA,WAAAA,QAGX,SAAAmD,GAAK,OACLA,EAAMC,SACFpD,EAAAA,EAAAA,OAAAA,IACAmD,EAAME,WACNrD,EAAAA,EAAAA,OAAAA,MACAA,EAAAA,EAAAA,OAAAA,SAAsB,GAIHA,EAAAA,EAAAA,WAGTA,EAAAA,EAAAA,OAAAA,OAIIA,EAAAA,EAAAA,OAAAA,KAKbsD,EAAY3D,EAAAA,GAAAA,IAAUa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,gKACxBG,EAAAA,EAAAA,OAAAA,IACIA,EAAAA,EAAAA,UAAAA,KACEA,EAAAA,EAAAA,WAAAA,QAOJuD,EAAiB5D,EAAAA,GAAAA,IAAUyB,IAAAA,GAAAvB,EAAAA,EAAAA,GAAA,gKAC7BG,EAAAA,EAAAA,OAAAA,MACIA,EAAAA,EAAAA,UAAAA,KACEA,EAAAA,EAAAA,WAAAA,QAOJwD,GAAmB7D,EAAAA,EAAAA,IAAO8D,EAAAA,IAAP9D,CAA6B2B,IAAAA,GAAAzB,EAAAA,EAAAA,GAAA,6IAMnDG,EAAAA,EAAAA,OAAAA,QAIG0D,GAAiB/D,EAAAA,EAAAA,IAAOgE,EAAAA,IAAPhE,CAAoBiE,IAAAA,GAAA/D,EAAAA,EAAAA,GAAA,6IAMxCG,EAAAA,EAAAA,OAAAA,QAIG6D,EAAgBlE,EAAAA,GAAAA,IAAUmE,IAAAA,GAAAjE,EAAAA,EAAAA,GAAA,iFAM1BkE,EAAcpE,EAAAA,GAAAA,IAAUqE,IAAAA,GAAAnE,EAAAA,EAAAA,GAAA,gGAQxBsB,GAAOxB,EAAAA,EAAAA,IAAO0B,EAAAA,GAAP1B,CAAesE,IAAAA,GAAApE,EAAAA,EAAAA,GAAA,kGACxBG,EAAAA,EAAAA,OAAAA,OACWA,EAAAA,EAAAA,WAITA,EAAAA,EAAAA,OAAAA,OAIAkE,EAAcvE,EAAAA,GAAAA,IAAUwE,IAAAA,GAAAtE,EAAAA,EAAAA,GAAA,sMAKtBG,EAAAA,EAAAA,UAAAA,IACEA,EAAAA,EAAAA,WAAAA,OAGNA,EAAAA,EAAAA,OAAAA,Y,oBCzIEoE,EAAcC,EAAAA,KAAaC,MAAM,CAC5CC,MAAOF,EAAAA,KAEJG,QALS,+CAKM,CAAEC,QAAS,+BAC1BC,SAAS,qBACZC,SAAUN,EAAAA,KAAaO,IAAI,GAAGF,SAAS,c,uECsBnCG,GAA2B,CAC/BN,MAAO,GACPI,SAAU,IAGCG,GAAY,WACvB,IAAAC,GAAkDC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1DI,EAAiBF,EAAA,GAAEG,EAAoBH,EAAA,GACxCI,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IAUzBC,EAAuB,WAC3BR,GAAqB,SAAAS,GAAS,OAAKA,CAAS,GAC9C,EAQA,OANAC,EAAAA,EAAAA,YAAU,WACJL,GACFJ,EAAS,WAEb,GAAG,CAACA,EAAUI,KAGZ/E,EAAAA,GAAAA,MAACmC,EAAO,CAAAlC,SAAA,EACNC,EAAAA,GAAAA,KAACoC,EAAY,CAAArC,UACXC,EAAAA,GAAAA,KAACX,EAAAA,GAAK,CAACsC,KAAM,cAEf3B,EAAAA,GAAAA,KAACT,EAAI,CAAAQ,SAAC,sEAGNC,EAAAA,GAAAA,KAACmF,EAAAA,GAAM,CACLlB,cAAeA,GACfmB,SA5Be,SAAHxE,EAAAyE,GAGZ,IAFF1B,EAAK/C,EAAL+C,MAAOI,EAAQnD,EAARmD,SACPuB,EAASD,EAATC,UAEFX,GAASY,EAAAA,EAAAA,IAAM,CAAE5B,MAAAA,EAAOI,SAAAA,KACxBuB,GACF,EAuBME,iBAAkBhC,EAAYzD,SAE7B,SAAA0F,GAAA,IAAGC,EAAYD,EAAZC,aAAcC,EAAMF,EAANE,OAAQC,EAAOH,EAAPG,QAAO,OAC/B9F,EAAAA,GAAAA,MAAA,QAAMsF,SAAUM,EAAa3F,SAAA,EAC3BD,EAAAA,GAAAA,MAACuC,EAAW,CAAAtC,SAAA,EACVC,EAAAA,GAAAA,KAACsC,EAAY,CAAAvC,UACXD,EAAAA,GAAAA,MAAA,SAAAC,SAAA,EACEC,EAAAA,GAAAA,KAAC6F,EAAAA,GAAK,CAACC,KAAK,QAAQnE,KAAK,QAAQoE,YAAY,YAC7C/F,EAAAA,GAAAA,KAACgG,EAAAA,GAAY,CAACrE,KAAK,QAAQsE,UAAWvD,UAI1C1C,EAAAA,GAAAA,KAACsC,EAAY,CAAAvC,UACXD,EAAAA,GAAAA,MAAA,SAAAC,SAAA,EACEC,EAAAA,GAAAA,KAAC6F,EAAAA,GAAK,CACJC,KAAMvB,EAAoB,OAAS,WACnC5C,KAAK,WACLoE,YAAY,cAEbxB,GACCvE,EAAAA,GAAAA,KAAC8C,EAAc,CAACoD,QAASlB,KAEzBhF,EAAAA,GAAAA,KAAC4C,EAAgB,CAACsD,QAASlB,IAE5BY,EAAQ7B,WAAa4B,EAAO5B,WAC3B/D,EAAAA,GAAAA,KAAC2C,EAAc,CAAA5C,SAAC,uBAEjB6F,EAAQ7B,WAAa4B,EAAO5B,WAC3B/D,EAAAA,GAAAA,KAACmD,EAAW,CAAApD,UACVC,EAAAA,GAAAA,KAAA,OAAKmG,KAAMC,EAAAA,EAAS,mBAGxBpG,EAAAA,GAAAA,KAACgG,EAAAA,GAAY,CAACrE,KAAK,WAAWsE,UAAWvD,aAI/C1C,EAAAA,GAAAA,KAACiD,EAAa,CAAAlD,UACZC,EAAAA,GAAAA,KAACqG,EAAAA,GAGC,CACAP,KAAM,SACN/F,SACD,eAIE,KAGXD,EAAAA,GAAAA,MAACwD,EAAW,CAAAvD,SAAA,EACVC,EAAAA,GAAAA,KAAA,KAAAD,SAAG,iCACHC,EAAAA,GAAAA,KAACO,EAAI,CAACW,GAAG,YAAWnB,SAAC,kBAI7B,EC1GA,GAdc,WACZ,OACEC,EAAAA,GAAAA,KAACsG,EAAAA,GAAS,CAAAvG,UACRD,EAAAA,GAAAA,MAACmC,EAAO,CAAAlC,SAAA,EACND,EAAAA,GAAAA,MAACoC,EAAe,CAAAnC,SAAA,EACdC,EAAAA,GAAAA,KAACL,EAAK,CAACM,IAAKsG,EAAUpG,IAAI,QACzB4B,EAAAA,IAAY/B,EAAAA,GAAAA,KAACwB,EAAAA,GAAO,CAACC,IAAKM,EAAAA,QAE7B/B,EAAAA,GAAAA,KAACkE,GAAS,QAIlB,C","sources":["components/hero/hero.styled.ts","components/hero/hero.tsx","components/newsItem/newsItem.styled.ts","components/newsItem/newsItem.tsx","components/petInfo/petInfo.styled.ts","components/petInfo/petInfo.tsx","constants/pets.ts","pages/login/login.styled.ts","pages/login/components/loginForm/loginForm.styled.ts","pages/login/components/loginForm/loginShema.ts","pages/login/components/loginForm/loginForm.tsx","pages/login/login.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport { theme } from 'constants/theme';\n\nexport const HeroWrapper = styled.div``;\n\nexport const TextWrapper = styled.div`\n  display: flex;\n  align-items: flex-end;\n  gap: 73px;\n  background-color: ${theme.colors.accent};\n  padding: 80px 64px 32px 64px;\n  border-radius: 60px;\n`;\n\nexport const Title = styled.h1`\n  color: ${theme.colors.white};\n  font-size: ${theme.fontSizes.xxxxxl};\n  font-weight: ${theme.fontWeight.bold};\n  line-height: 0.96667;\n  letter-spacing: -2.7px;\n  width: 760px;\n`;\n\nexport const Text = styled.p`\n  color: ${theme.colors.white};\n  font-size: ${theme.fontSizes.s};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.22222;\n  letter-spacing: -0.36px;\n  width: 255px;\n`;\n\nexport const Accent = styled.span`\n  color: ${theme.colors.accentHero};\n`;\n\nexport const Image = styled.img`\n  border-radius: 60px;\n`;","import heroImg from 'assets/images/heroImg.jpg';\nimport {\n  Accent,\n  HeroWrapper,\n  Image,\n  Text,\n  TextWrapper,\n  Title,\n} from './hero.styled';\n\nexport const Hero = () => {\n  return (\n    <HeroWrapper>\n      <TextWrapper>\n        <Title>\n          Take good <Accent>care</Accent> of your small pets\n        </Title>\n        <Text>\n          Choosing a pet for your home is a choice that is meant to enrich your\n          life with immeasurable joy and tenderness.\n        </Text>\n      </TextWrapper>\n\n      <Image src={heroImg} alt=\"Girl with a dog\" />\n    </HeroWrapper>\n  );\n};\n","import { theme } from 'constants/theme';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const NewsItemWrapper = styled.li`\n  width: 361px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport const ImageWrapper = styled.div`\n  width: 361px;\n  height: 226px;\n  border-radius: 15px;\n  overflow: hidden;\n  margin-bottom: 28px;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const Title = styled.h3`\n  margin-bottom: 14px;\n  font-size: ${theme.fontSizes.m};\n  font-weight: ${theme.fontWeight.bold};\n  line-height: 1.3;\n  letter-spacing: -0.6px;\n  color: ${theme.colors.black};\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 28px;\n  font-size: ${theme.fontSizes.xs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.25;\n  letter-spacing: -0.32px;\n  color: ${theme.colors.black};\n`;\n\nexport const BottomList = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n`;\n\nexport const Date = styled.p`\n  font-size: ${theme.fontSizes.xs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.25;\n  letter-spacing: -0.32px;\n  color: ${theme.colors.mediumGrey};\n`;\n\nexport const Link = styled(NavLink)`\n  margin-bottom: 32px;\n  text-decoration: underline;\n  font-size: ${theme.fontSizes.xs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.25;\n  letter-spacing: -0.32px;\n  color: ${theme.colors.accent};\n\n  padding: 4px 12px;\n  border-radius: 15px;\n  border: 1px solid transparent;\n  transition: border ${theme.transition};\n\n  &:hover,\n  &:focus {\n    border: 1px solid ${theme.colors.accent};\n  }\n`;\n","// import { formattedDate } from 'utils';\nimport {\n  BottomList,\n  Image,\n  ImageWrapper,\n  Link,\n  NewsItemWrapper,\n  Text,\n  Title,\n} from './newsItem.styled';\n\nexport const NewsItem = ({ item }: any) => {\n  const { title, text, imgUrl, url } = item;\n\n  return (\n    <NewsItemWrapper>\n      <div>\n        <ImageWrapper>\n          <Image src={imgUrl} alt={title} />\n        </ImageWrapper>\n        <Title>{title}</Title>\n        <Text>{text}</Text>\n      </div>\n      <BottomList>\n        {/* <Date>{formattedDate(date)}</Date> */}\n        <Link to={url} target=\"_blank\" rel=\"noopener noreferrer\">\n          Read more\n        </Link>\n      </BottomList>\n    </NewsItemWrapper>\n  );\n};\n","import styled from 'styled-components';\nimport { theme } from 'constants/theme';\n\nexport const InfoWrapper = styled.div`\n  position: absolute;\n  left: 61px;\n  bottom: 97px;\n  width: 294px;\n  height: 121px;\n  padding: 16px;\n  display: flex;\n  align-items: flex-start;\n  gap: 8px;\n  background-color: ${theme.colors.white};\n  border-radius: 20px;\n  z-index: 10;\n`;\n\nexport const Avatar = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 14px;\n  background-color: ${theme.colors.beige};\n  border-radius: 50%;\n`;\n\nexport const Image = styled.img`\n  width: 32px;\n  height: 32px;\n`;\n\nexport const TextWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 8px;\n`;\n\nexport const Title = styled.p`\n  font-size: ${theme.fontSizes.xs};\n  font-weight: ${theme.fontWeight.bold};\n  line-height: 1.25;\n  letter-spacing: -0.48px;\n  color: ${theme.colors.accent};\n`;\n\nexport const Text = styled.p`\n  font-size: ${theme.fontSizes.xxxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.16667;\n  letter-spacing: -0.24px;\n  color: ${theme.colors.mediumGrey};\n`;\n\nexport const Accent = styled.span`\n  color: ${theme.colors.black};\n`;\n\nexport const InfoText = styled.p`\n  font-size: ${theme.fontSizes.xxxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.16667;\n  letter-spacing: -0.24px;\n  color: ${theme.colors.darkGrey};\n`;","import { PetBlockInfo } from 'types';\nimport {\n  Accent,\n  Avatar,\n  Image,\n  InfoText,\n  InfoWrapper,\n  Text,\n  TextWrapper,\n  Title,\n} from './petInfo.styled';\n\ninterface PetInfoProps {\n  pet: PetBlockInfo;\n}\n\nexport const PetInfo = ({ pet }: PetInfoProps) => {\n  const { imgURL, name, birthday, title } = pet;\n  return (\n    <InfoWrapper>\n      <Avatar>\n        <Image src={imgURL} alt=\"Avatar\" />\n      </Avatar>\n      <div>\n        <TextWrapper>\n          <Title>{name}</Title>\n          <Text>\n            Birthday: <Accent>{birthday}</Accent>\n          </Text>\n        </TextWrapper>\n        <InfoText>{title}</InfoText>\n      </div>\n    </InfoWrapper>\n  );\n};\n","import registrationAvatar from 'assets/images/registrationAvatar.png';\nimport loginAvatar from 'assets/images/loginAvatar.png';\n\nexport const registrationPet = {\n  imgURL: registrationAvatar,\n  name: 'Jack',\n  birthday: '18.10.2021',\n  title:\n    'Jack is a gray Persian cat with green eyes. He loves to be pampered and groomed, and enjoys playing with toys.',\n};\n\nexport const loginPet = {\n  imgURL: loginAvatar,\n  name: 'Rich',\n  birthday: '21.09.2020',\n  title:\n    'Rich would be the perfect addition to an active family that loves to play and go on walks. I bet he would love having a doggy playmate too!',\n};\n","import styled from 'styled-components';\nimport { theme } from 'constants/theme';\nimport rectangle from 'assets/images/rectangle.png';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 32px;\n`;\n\nexport const PetBlockWrapper = styled.div`\n  position: relative;\n  background-color: ${theme.colors.accent};\n  background-image: url(${rectangle});\n  background-repeat: no-repeat;\n  background-position: center bottom;\n  width: 592px;\n  height: 654px;\n  border-radius: 60px;\n`;\n\nexport const Image = styled.img`\n  position: absolute;\n  bottom: 0;\n  left: 30px;\n`;","import { theme } from 'constants/theme';\nimport styled from 'styled-components';\nimport { AiOutlineEyeInvisible, AiOutlineEye } from 'react-icons/ai';\nimport { NavLink } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  padding: 77px 84px;\n  border-radius: 60px;\n  background-color: ${theme.colors.white};\n`;\n\nexport const TitleWrapper = styled.div`\n  margin-bottom: 16px;\n`;\n\nexport const Text = styled.p`\n  font-size: ${theme.fontSizes.s};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.222;\n  letter-spacing: -0.16px;\n  color: ${theme.colors.black};\n  margin-bottom: 32px;\n`;\n\nexport const FormWrapper = styled.div`\n  margin-bottom: 16px;\n`;\n\ninterface InputWrapperProps {\n    haserror?: boolean;\n    hassuccess?: boolean;\n  }\n\nexport const InputWrapper = styled.div<InputWrapperProps>`\n  margin-bottom: 16px;\n  max-width: 424px;\n  position: relative;\n  width: 100%;\n\n  input {\n    width: 100%;\n    padding: 16px;\n    font-size: ${theme.fontSizes.xs};\n    color: ${theme.colors.black};\n    font-weight: ${theme.fontWeight.medium};\n    line-height: 1.25;\n    border: 1px solid\n      ${props =>\n        props.haserror\n          ? theme.colors.red\n          : props.hassuccess\n          ? theme.colors.green\n          : theme.colors.lightGrey};\n    border-radius: 30px;\n    box-sizing: border-box;\n    outline: none;\n    transition: border-color ${theme.transition};\n\n    &:focus {\n      border-color: ${theme.colors.accent};\n    }\n\n    .error {\n      border: 1px solid ${theme.colors.red};\n    }\n  }\n`;\n\nexport const ErrorText = styled.div`\n  color: ${theme.colors.red};\n  font-size: ${theme.fontSizes.xxxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.1667;\n  letter-spacing: -0.36px;\n  margin-top: 4px;\n  margin-bottom: 12px;\n`;\n\nexport const SuccessMessage = styled.div`\n  color: ${theme.colors.green};\n  font-size: ${theme.fontSizes.xxxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.1667;\n  letter-spacing: -0.36px;\n  margin-top: 4px;\n  margin-bottom: 12px;\n`;\n\nexport const EyeIconInvisible = styled(AiOutlineEyeInvisible)`\n  position: absolute;\n  top: 26px;\n  right: 16px;\n  width: 22px;\n  height: 22px;\n  fill: ${theme.colors.accent};\n  transform: translateY(-50%);\n`;\n\nexport const EyeIconVisible = styled(AiOutlineEye)`\n  position: absolute;\n  top: 26px;\n  right: 16px;\n  width: 22px;\n  height: 22px;\n  fill: ${theme.colors.accent};\n  transform: translateY(-50%);\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: inline-block;\n  margin-top: 16px;\n  margin-bottom: 48px;\n`;\n\nexport const SuccessIcon = styled.svg`\n  position: absolute;\n  top: 15px;\n  right: 50px;\n  width: 22px;\n  height: 22px;\n`;\n\nexport const Link = styled(NavLink)`\n  color: ${theme.colors.accent};\n  transition: color ${theme.transition};\n\n  &:hover,\n  :focus {\n    color: ${theme.colors.beige};\n  }\n`;\n\nexport const LinkWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 4px;\n  font-size: ${theme.fontSizes.xxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.428;\n  letter-spacing: -0.42px;\n  color: ${theme.colors.mediumGrey};\n`;","import * as yup from 'yup';\n\nconst regEx = /^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/;\n\nexport const LoginSchema = yup.object().shape({\n  email: yup\n    .string()\n    .matches(regEx, { message: 'Please enter a valid email' })\n    .required('Email is required'),\n  password: yup.string().min(7).required('Required'),\n});","import {\n  ButtonWrapper,\n  ErrorText,\n  EyeIconInvisible,\n  EyeIconVisible,\n  FormWrapper,\n  InputWrapper,\n  Link,\n  LinkWrapper,\n  SuccessIcon,\n  SuccessMessage,\n  Text,\n  TitleWrapper,\n  Wrapper,\n} from './loginForm.styled';\nimport { Formik, Field, ErrorMessage, FormikHelpers } from 'formik';\nimport { LoginSchema } from './loginShema';\nimport { useEffect, useState } from 'react';\nimport sprite from 'assets/sprite.svg';\nimport { Button, Title } from 'ui';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { logIn, selectIsLoggedIn } from '../../../../redux/auth';\nimport { AppDispatch } from 'redux/store';\n\ninterface LoginData {\n  email: string;\n  password: string;\n}\n\nconst initialValues: LoginData = {\n  email: '',\n  password: '',\n};\n\nexport const LoginForm = () => {\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\n  const navigate = useNavigate();\n  const dispatch = useDispatch<AppDispatch>();\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n\n  const handleSubmit = (\n    { email, password }: LoginData,\n    { resetForm }: FormikHelpers<LoginData>\n  ) => {\n    dispatch(logIn({ email, password }));\n    resetForm();\n  };\n\n  const handleTogglePassword = () => {\n    setIsPasswordVisible(prevState => !prevState);\n  };\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      navigate('/profile');\n    }\n  }, [navigate, isLoggedIn]);\n\n  return (\n    <Wrapper>\n      <TitleWrapper>\n        <Title name={'Log in'} />\n      </TitleWrapper>\n      <Text>\n        Welcome! Please enter your credentials to login to the platform:\n      </Text>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={LoginSchema}\n      >\n        {({ handleSubmit, errors, touched }) => (\n          <form onSubmit={handleSubmit}>\n            <FormWrapper>\n              <InputWrapper>\n                <label>\n                  <Field type=\"email\" name=\"email\" placeholder=\" Email\" />\n                  <ErrorMessage name=\"email\" component={ErrorText} />\n                </label>\n              </InputWrapper>\n\n              <InputWrapper>\n                <label>\n                  <Field\n                    type={isPasswordVisible ? 'text' : 'password'}\n                    name=\"password\"\n                    placeholder=\" Password\"\n                  />\n                  {isPasswordVisible ? (\n                    <EyeIconVisible onClick={handleTogglePassword} />\n                  ) : (\n                    <EyeIconInvisible onClick={handleTogglePassword} />\n                  )}\n                  {touched.password && !errors.password && (\n                    <SuccessMessage>Password is secure</SuccessMessage>\n                  )}\n                  {touched.password && !errors.password && (\n                    <SuccessIcon>\n                      <use href={sprite + '#icon-check'}></use>\n                    </SuccessIcon>\n                  )}\n                  <ErrorMessage name=\"password\" component={ErrorText} />\n                </label>\n              </InputWrapper>\n            </FormWrapper>\n            <ButtonWrapper>\n              <Button\n                // padding={'16px 186px'}\n                // width={'424px'}\n                // height={'52px'}\n                type={'submit'}\n                // handleClick={handleSubmit}\n              >\n                LOG IN\n              </Button>\n            </ButtonWrapper>\n          </form>\n        )}\n      </Formik>\n      <LinkWrapper>\n        <p>Don’t have an account?</p>\n        <Link to=\"/register\">Register</Link>\n      </LinkWrapper>\n    </Wrapper>\n  );\n};\n","import { Image, PetBlockWrapper, Wrapper } from './login.styled';\nimport loginImg from 'assets/images/loginImg.png';\nimport { loginPet } from 'constants/pets';\nimport { PetInfo } from 'components';\nimport { LoginForm } from './components/loginForm';\nimport { Container } from 'ui';\n\nconst Login = () => {\n  return (\n    <Container>\n      <Wrapper>\n        <PetBlockWrapper>\n          <Image src={loginImg} alt=\"Pet\" />\n          {loginPet && <PetInfo pet={loginPet} />}\n        </PetBlockWrapper>\n        <LoginForm />\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default Login;\n"],"names":["HeroWrapper","styled","_templateObject","_taggedTemplateLiteral","TextWrapper","_templateObject2","theme","Title","_templateObject3","Text","_templateObject4","Accent","_templateObject5","Image","_templateObject6","Hero","_jsxs","children","_jsx","src","heroImg","alt","NewsItemWrapper","ImageWrapper","BottomList","Link","_templateObject7","NavLink","_templateObject8","NewsItem","_ref","item","title","text","imgUrl","url","to","target","rel","InfoWrapper","Avatar","InfoText","PetInfo","pet","imgURL","name","birthday","registrationPet","registrationAvatar","loginPet","loginAvatar","Wrapper","PetBlockWrapper","rectangle","TitleWrapper","FormWrapper","InputWrapper","props","haserror","hassuccess","ErrorText","SuccessMessage","EyeIconInvisible","AiOutlineEyeInvisible","EyeIconVisible","AiOutlineEye","_templateObject9","ButtonWrapper","_templateObject10","SuccessIcon","_templateObject11","_templateObject12","LinkWrapper","_templateObject13","LoginSchema","yup","shape","email","matches","message","required","password","min","initialValues","LoginForm","_useState","useState","_useState2","_slicedToArray","isPasswordVisible","setIsPasswordVisible","navigate","useNavigate","dispatch","useDispatch","isLoggedIn","useSelector","selectIsLoggedIn","handleTogglePassword","prevState","useEffect","Formik","onSubmit","_ref2","resetForm","logIn","validationSchema","_ref3","handleSubmit","errors","touched","Field","type","placeholder","ErrorMessage","component","onClick","href","sprite","Button","Container","loginImg"],"sourceRoot":""}