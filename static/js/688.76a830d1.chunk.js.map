{"version":3,"file":"static/js/688.76a830d1.chunk.js","mappings":"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","sources":["pages/addPet/addPet.styled.ts","pages/addPet/components/genderSelection/genderSelection.styled.ts","pages/addPet/components/genderSelection/genderSelection.tsx","pages/addPet/components/addPetForm/addPetForm.styled.ts","pages/addPet/components/addPetForm/addPetFormShema.ts","constants/addPetOptions.ts","pages/addPet/components/addPetForm/addPetForm.tsx","pages/addPet/addPet.tsx","redux/pets/petsSelectors.ts"],"sourcesContent":["import styled from 'styled-components';\nimport { theme } from 'constants/theme';\nimport rectangle from 'assets/images/rectangle.png';\n\nexport const Section = styled.section`\n  margin-bottom: 32px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 32px;\n`;\n\nexport const PetBlockWrapper = styled.div`\n  position: relative;\n  background-color: ${theme.colors.accent};\n  background-image: url(${rectangle});\n  background-repeat: no-repeat;\n  background-position: center bottom;\n  width: 592px;\n  height: 654px;\n  border-radius: 60px;\n`;\n\nexport const Image = styled.img`\n  position: absolute;\n  bottom: 0;\n  left: 30px;\n`;","import styled from 'styled-components';\n\nexport const SelectionWrapper = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\ninterface StyledRadioWrapperProps {\n  backgroundcolor?: string;\n  bordercolor?: string;\n}\n\nexport const StyledRadioWrapper = styled.div<StyledRadioWrapperProps>`\n  span {\n    width: 40px;\n    height: 40px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 50%;\n  }\n\n  input[type='radio'] {\n    display: none;\n  }\n\n  input[type='radio'] + span {\n    position: relative;\n    background-color: ${props => props.backgroundcolor || 'transparent'};\n  }\n\n  input[type='radio']:checked + span::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 38px;\n    height: 38px;\n    border: 2px solid grey;\n    border-color: ${props => props.bordercolor || 'transparent'};\n    background-color: transparent;\n    border-radius: 50%;\n  }\n`;\n\nexport const FemaleIcon = styled.svg<{ selected?: boolean }>`\n  width: 24px;\n  height: 24px;\n  stroke: ${({ selected }) => (selected ? 'white' : '#f43f5e')};\n  fill: transparent;\n\n  &:hover {\n    stroke: #892d3e;\n  }\n`;\n\nexport const MaleIcon = styled.svg<{ selected?: boolean }>`\n  width: 24px;\n  height: 24px;\n  stroke: ${({ selected }) => (selected ? 'white' : '#54ADFF')};\n  fill: transparent;\n  &:hover {\n    stroke: #31577d;\n  }\n`;\n\nexport const MultipleIcon = styled.svg<{ selected?: boolean }>`\n  width: 24px;\n  height: 24px;\n  stroke: ${({ selected }) => (selected ? 'white' : '#F6B83D')};\n  fill: transparent;\n  &:hover {\n    stroke: #86714c;\n  }\n`;\n","import {\n  FemaleIcon,\n  MaleIcon,\n  MultipleIcon,\n  SelectionWrapper,\n  StyledRadioWrapper,\n} from './genderSelection.styled';\nimport { Field } from 'formik';\nimport sprite from 'assets/sprite.svg';\nimport { useState } from 'react';\n\ninterface GenderSelectionProps {\n  setFieldValue: (field: string, value: any) => void;\n}\n\nexport const GenderSelection = ({ setFieldValue }: GenderSelectionProps) => {\n  const [selectedGender, setSelectedGender] = useState<string>('');\n\n  const handleGenderChange = (value: string): void => {\n    setSelectedGender(value);\n    setFieldValue('sex', value);\n  };\n\n  return (\n    <SelectionWrapper>\n      <StyledRadioWrapper\n        backgroundcolor={\n          selectedGender === 'female' ? '#F43F5E' : 'rgba(244, 63, 94, 0.1)'\n        }\n        bordercolor=\"transparent\"\n      >\n        <label>\n          <Field\n            type=\"radio\"\n            name=\"sex\"\n            value=\"female\"\n            onChange={() => handleGenderChange('female')}\n          />\n          <span>\n            <FemaleIcon selected={selectedGender === 'female'}>\n              <use href={sprite + '#icon-female'}></use>\n            </FemaleIcon>\n          </span>\n        </label>\n      </StyledRadioWrapper>\n\n      <StyledRadioWrapper\n        backgroundcolor={\n          selectedGender === 'male' ? '#4792d8' : 'rgba(84, 173, 255, 0.1)'\n        }\n        bordercolor=\"transparent\"\n      >\n        <label>\n          <Field\n            type=\"radio\"\n            name=\"sex\"\n            value=\"male\"\n            onChange={() => handleGenderChange('male')}\n          />\n          <span>\n            <MaleIcon selected={selectedGender === 'male'}>\n              <use href={sprite + '#icon-male'}></use>\n            </MaleIcon>\n          </span>\n        </label>\n      </StyledRadioWrapper>\n      <StyledRadioWrapper\n        backgroundcolor={selectedGender === 'mixed' ? '#e1c184' : '#FFF4DF'}\n        bordercolor=\"transparent\"\n      >\n        <label>\n          <Field\n            type=\"radio\"\n            name=\"sex\"\n            value=\"mixed\"\n            onChange={() => handleGenderChange('mixed')}\n          />\n          <span>\n            <MultipleIcon selected={selectedGender === 'mixed'}>\n              <use href={sprite + '#icon-multiple'}></use>\n            </MultipleIcon>\n          </span>\n        </label>\n      </StyledRadioWrapper>\n    </SelectionWrapper>\n  );\n};\n","import { theme } from 'constants/theme';\nimport styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  padding: 60px 80px;\n  border-radius: 60px;\n  background-color: ${theme.colors.white};\n`;\n\nexport const TitleWrapper = styled.div`\n  display: flex;\n  align-items: baseline;\n  margin-bottom: 24px;\n`;\n\nexport const Title = styled.h2`\n  font-size: ${theme.fontSizes.xxl};\n  font-weight: ${theme.fontWeight.bold};\n  line-height: 1;\n  letter-spacing: -0.96px;\n  color: ${theme.colors.black};\n`;\n\nexport const Text = styled.p`\n  font-size: ${theme.fontSizes.xs};\n  font-weight: ${theme.fontWeight.bold};\n  line-height: 1.25;\n  color: ${theme.colors.semiGrey};\n`;\n\nexport const ImageWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 86px;\n  height: 86px;\n  background-color: ${theme.colors.beige};\n  border-radius: 50%;\n  overflow: hidden;\n  margin-bottom: 12px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const PetIcon = styled.svg`\n  width: 44px;\n  height: 44px;\n  fill: ${theme.colors.accent};\n`;\n\nexport const FormWrapper = styled.div`\n  margin-bottom: 16px;\n`;\n\ninterface InputWrapperProps {\n  haserror?: boolean;\n  hassuccess?: boolean;\n}\n\nexport const InputWrapper = styled.div<InputWrapperProps>`\n  margin-bottom: 16px;\n  max-width: 424px;\n  position: relative;\n  width: 100%;\n\n  input {\n    width: 100%;\n    padding: 16px;\n    font-size: ${theme.fontSizes.xs};\n    color: ${theme.colors.black};\n    font-weight: ${theme.fontWeight.medium};\n    line-height: 1.25;\n    border: 1px solid\n      ${props =>\n        props.haserror\n          ? theme.colors.red\n          : props.hassuccess\n          ? theme.colors.green\n          : theme.colors.lightGrey};\n    border-radius: 30px;\n    box-sizing: border-box;\n    outline: none;\n    transition: border-color ${theme.transition};\n\n    &:focus {\n      border-color: ${theme.colors.accent};\n    }\n\n    .error {\n      border: 1px solid ${theme.colors.red};\n    }\n  }\n`;\n\nexport const ErrorText = styled.div`\n  color: ${theme.colors.red};\n  font-size: ${theme.fontSizes.xxxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.1667;\n  letter-spacing: -0.36px;\n  margin-top: 4px;\n  margin-bottom: 12px;\n`;\n\nexport const SuccessMessage = styled.div`\n  color: ${theme.colors.green};\n  font-size: ${theme.fontSizes.xxxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.1667;\n  letter-spacing: -0.36px;\n  margin-top: 4px;\n  margin-bottom: 12px;\n`;\n\nexport const BlockWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n  gap: 8px;\n`;\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  gap: 8px;\n  justify-content: center;\n`;\n\nexport const CalendarIcon = styled.svg`\n  width: 20px;\n  height: 20px;\n  stroke: ${theme.colors.black};\n  fill: transparent;\n  position: absolute;\n  top: 16px;\n  left: 174px;\n`;\n\nexport const Label = styled.label`\n  width: 210px;\n  display: block;\n`;\n\nexport const OptionsWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  gap: 12px;\n`;\n\nexport const customStyles = {\n  control: (provided: any, state: any) => ({\n    ...provided,\n    width: '100%',\n    padding: '8px 8px 8px 14px',\n    fontSize: '16px',\n    color: '#000',\n    fontWeight: '500',\n    lineHeight: '20px',\n    letterSpacing: '3%',\n    border: state.isFocused ? '1px solid #F6B83D' : '1px solid #e0e0e0',\n    borderRadius: '30px',\n    boxShadow: 'none',\n    '&:hover': {\n      borderColor: '#F6B83D',\n    },\n  }),\n  placeholder: (provided: any) => ({\n    ...provided,\n    color: '#a0a0a0',\n    fontWeight: '400',\n  }),\n  menu: (provided: any) => ({\n    ...provided,\n    borderRadius: '10px',\n    marginTop: '0',\n  }),\n  option: (provided: any, state: any) => ({\n    ...provided,\n    backgroundColor: state.isSelected ? '#F6B83D' : '#fff',\n    color: state.isSelected ? '#fff' : '#000',\n    border: 'none',\n    boxShadow: 'none',\n    '&:hover': {\n      backgroundColor: '#F6B83D',\n      color: '#fff',\n    },\n  }),\n  singleValue: (provided: any) => ({\n    ...provided,\n    color: '#000',\n  }),\n};\n","import * as yup from 'yup';\n\nexport const AddPetFormSchema = yup.object().shape({\n  name: yup.string().required('Name is required'),\n  imgURL: yup.string().url('Must be a valid URL').optional(),\n  species: yup.string().required('Species is required'),\n  birthday: yup.date().required('Birthday is required'),\n  title: yup.string().optional(),\n  sex: yup\n    .string()\n    .oneOf(\n      ['male', 'female', 'other'],\n      'Sex must be either male, female or other'\n    )\n    .required('Sex is required'),\n});\n","export const speciesOptions = [\n  { value: 'dog', label: 'Dog' },\n  { value: 'cat', label: 'Cat' },\n  { value: 'monkey', label: 'Monkey' },\n  { value: 'bird', label: 'Bird' },\n  { value: 'fish', label: 'Fish' },\n  { value: 'reptile', label: 'Reptile' },\n  { value: 'other', label: 'Other' },\n];\n","import { Formik, FormikHelpers, Field, ErrorMessage } from 'formik';\nimport { GenderSelection } from '../genderSelection';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport sprite from 'assets/sprite.svg';\nimport Select from 'react-select';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  BlockWrapper,\n  ButtonWrapper,\n  CalendarIcon,\n  customStyles,\n  ErrorText,\n  FormWrapper,\n  Image,\n  ImageWrapper,\n  InputWrapper,\n  Label,\n  OptionsWrapper,\n  PetIcon,\n  Text,\n  Title,\n  TitleWrapper,\n  Wrapper,\n} from './addPetForm.styled';\nimport { AddPetFormSchema } from './addPetFormShema';\nimport { Button } from 'ui';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { AppDispatch } from 'redux/store';\nimport { addPet } from '../../../../redux/pets';\nimport { speciesOptions } from 'constants/addPetOptions';\nimport { ButtonSize, ButtonVariant } from 'types';\n\ninterface AddPetFormData {\n  name: string;\n  imgURL: string;\n  species: string;\n  birthday: string;\n  title?: string;\n  sex: string;\n}\n\nconst initialValues: AddPetFormData = {\n  name: '',\n  imgURL: '',\n  species: '',\n  birthday: '',\n  title: '',\n  sex: '',\n};\n\nexport const AddPetForm = () => {\n  const [birthday, setBirthday] = useState<Date | null>(null);\n  const [selectedSpecies, setSelectedSpecies] = useState(null);\n  const [selectedImage, setSelectedImage] = useState<string | null>(null);\n\n  const dispatch = useDispatch<AppDispatch>();\n  const navigate = useNavigate();\n\n  const handleSpeciesChange = (selectedOption: any) => {\n    setSelectedSpecies(selectedOption);\n  };\n\n  const handleSubmit = (\n    { name, imgURL, species, title, sex }: AddPetFormData,\n    { resetForm }: FormikHelpers<AddPetFormData>\n  ) => {\n    const formattedBirthday = birthday\n      ? `${birthday.getFullYear()}-${(birthday.getMonth() + 1)\n          .toString()\n          .padStart(2, '0')}-${birthday.getDate().toString().padStart(2, '0')}`\n      : '';\n\n    const petData = {\n      name,\n      imgURL,\n      species,\n      birthday: formattedBirthday,\n      title,\n      sex,\n    };\n    dispatch(addPet(petData));\n    resetForm();\n    navigate('/profile');\n  };\n\n  const handleCancel = () => {\n    navigate('/profile');\n  };\n\n  return (\n    <Wrapper>\n      <TitleWrapper>\n        <Title>Add my pet /</Title>\n        <Text>Personal details</Text>\n      </TitleWrapper>\n\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={AddPetFormSchema}\n      >\n        {({ handleSubmit, setFieldValue, values }) => (\n          <form onSubmit={handleSubmit}>\n            <FormWrapper>\n              <GenderSelection setFieldValue={setFieldValue} />\n              <ErrorMessage name=\"sex\" component={ErrorText} />\n              <ImageWrapper>\n                {selectedImage ? (\n                  <Image src={selectedImage} alt=\"Pet\" />\n                ) : (\n                  <PetIcon>\n                    <use href={sprite + '#icon-pet'}></use>\n                  </PetIcon>\n                )}\n              </ImageWrapper>\n              <BlockWrapper>\n                <InputWrapper>\n                  <label>\n                    <Field\n                      type=\"imgURL\"\n                      name=\"imgURL\"\n                      placeholder=\"Enter URL\"\n                      value={values.imgURL}\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        setFieldValue('imgURL', e.target.value);\n                      }}\n                    />\n                    <ErrorMessage name=\"imgURL\" component={ErrorText} />\n                  </label>\n                </InputWrapper>\n                <Button\n                  onClick={e => {\n                    e.preventDefault();\n                    setSelectedImage(values.imgURL);\n                  }}\n                >\n                  Add\n                </Button>\n              </BlockWrapper>\n              <InputWrapper>\n                <label>\n                  <Field type=\"title\" name=\"title\" placeholder=\"Title\" />\n                  <ErrorMessage name=\"title\" component={ErrorText} />\n                </label>\n              </InputWrapper>\n              <InputWrapper>\n                <label>\n                  <Field type=\"name\" name=\"name\" placeholder=\"Pet's Name\" />\n                  <ErrorMessage name=\"name\" component={ErrorText} />\n                </label>\n              </InputWrapper>\n              <OptionsWrapper>\n                <InputWrapper>\n                  <Label>\n                    <DatePicker\n                      selected={birthday}\n                      onChange={(date: Date | null) => {\n                        setBirthday(date);\n                        setFieldValue(\n                          'birthday',\n                          date\n                            ? date.toLocaleDateString('uk-UA', {\n                                day: '2-digit',\n                                month: '2-digit',\n                                year: 'numeric',\n                              })\n                            : ''\n                        );\n                      }}\n                      dateFormat=\"dd.MM.yyyy\"\n                      placeholderText=\"00.00.0000\"\n                    />\n                    <ErrorMessage name=\"birthday\" component={ErrorText} />\n                  </Label>\n                  <CalendarIcon>\n                    <use href={sprite + '#icon-calendar'}></use>\n                  </CalendarIcon>\n                </InputWrapper>\n                <InputWrapper>\n                  <Label>\n                    <Select\n                      value={selectedSpecies}\n                      onChange={option => {\n                        if (option) {\n                          handleSpeciesChange(option);\n                          setFieldValue('species', option.value);\n                        } else {\n                          setFieldValue('species', '');\n                        }\n                      }}\n                      options={speciesOptions}\n                      placeholder=\"Select Species\"\n                      styles={customStyles}\n                    />\n                    <ErrorMessage name=\"species\" component={ErrorText} />\n                  </Label>\n                </InputWrapper>\n              </OptionsWrapper>\n            </FormWrapper>\n            <ButtonWrapper>\n              <Button\n                size={ButtonSize.small}\n                variant={ButtonVariant.grey}\n                type={'submit'}\n                onClick={handleCancel}\n              >\n                Back\n              </Button>\n              <Button\n                size={ButtonSize.small}\n                variant={ButtonVariant.orange}\n                type={'submit'}\n              >\n                Submit\n              </Button>\n            </ButtonWrapper>\n          </form>\n        )}\n      </Formik>\n    </Wrapper>\n  );\n};\n","import { Image, PetBlockWrapper, Section, Wrapper } from './addPet.styled';\nimport addPetImg from 'assets/images/addPetImg.png';\nimport { AddPetForm } from './components/addPetForm/addPetForm';\nimport { Container } from 'ui';\n\nconst AddPet = () => {\n  return (\n    <Section>\n      <Container>\n        <Wrapper>\n          <PetBlockWrapper>\n            <Image src={addPetImg} alt=\"Pet\" />\n          </PetBlockWrapper>\n          <AddPetForm />\n        </Wrapper>\n      </Container>\n    </Section>\n  );\n};\n\nexport default AddPet;\n","import { RootState } from 'redux/store';\n\nexport const selectPets = (state: RootState) => state.pets.pets;\n"],"names":["Section","styled","_templateObject","_taggedTemplateLiteral","Wrapper","_templateObject2","PetBlockWrapper","_templateObject3","theme","rectangle","Image","_templateObject4","SelectionWrapper","StyledRadioWrapper","props","backgroundcolor","bordercolor","FemaleIcon","_ref","selected","MaleIcon","_ref2","MultipleIcon","_templateObject5","_ref3","GenderSelection","setFieldValue","_useState","useState","_useState2","_slicedToArray","selectedGender","setSelectedGender","handleGenderChange","value","_jsxs","children","_jsx","Field","type","name","onChange","href","sprite","TitleWrapper","Title","Text","ImageWrapper","_templateObject6","PetIcon","_templateObject7","FormWrapper","_templateObject8","InputWrapper","_templateObject9","haserror","hassuccess","ErrorText","_templateObject10","BlockWrapper","_templateObject11","_templateObject12","ButtonWrapper","_templateObject13","CalendarIcon","_templateObject14","Label","_templateObject15","OptionsWrapper","_templateObject16","customStyles","control","provided","state","_objectSpread","width","padding","fontSize","color","fontWeight","lineHeight","letterSpacing","border","isFocused","borderRadius","boxShadow","borderColor","placeholder","menu","marginTop","option","backgroundColor","isSelected","singleValue","AddPetFormSchema","yup","shape","required","imgURL","url","optional","species","birthday","title","sex","oneOf","speciesOptions","label","initialValues","AddPetForm","setBirthday","_useState3","_useState4","selectedSpecies","setSelectedSpecies","_useState5","_useState6","selectedImage","setSelectedImage","dispatch","useDispatch","navigate","useNavigate","handleCancel","Formik","onSubmit","resetForm","petData","concat","getFullYear","getMonth","toString","padStart","getDate","addPet","validationSchema","handleSubmit","values","ErrorMessage","component","src","alt","e","target","Button","onClick","preventDefault","DatePicker","date","toLocaleDateString","day","month","year","dateFormat","placeholderText","Select","options","styles","size","ButtonSize","variant","ButtonVariant","Container","addPetImg","selectPets","pets"],"sourceRoot":""}