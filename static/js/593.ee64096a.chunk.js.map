{"version":3,"file":"static/js/593.ee64096a.chunk.js","mappings":"kVAIaA,EAAUC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qJAWpBC,EAAkBH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,obAEnBG,EAAAA,EAAAA,OAAAA,OACIC,GAoBbC,EAAQP,EAAAA,GAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,yK,wCCjClBH,EAAUC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2KAGXG,EAAAA,EAAAA,OAAAA,OAQTI,EAAeT,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,kGAQzBQ,EAAOV,EAAAA,GAAAA,EAAQQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,sRACbG,EAAAA,EAAAA,UAAAA,IACEA,EAAAA,EAAAA,WAAAA,OAGNA,EAAAA,EAAAA,OAAAA,MAIMA,EAAAA,EAAAA,UAAAA,GAOJM,EAAcX,EAAAA,GAAAA,IAAUY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,QAOxBW,EAAeb,EAAAA,GAAAA,IAAUc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,kqBASrBG,EAAAA,EAAAA,UAAAA,IACJA,EAAAA,EAAAA,OAAAA,MACMA,EAAAA,EAAAA,WAAAA,OAGNA,EAAAA,EAAAA,OAAAA,OAEL,SAAAU,GAAK,OACLA,EAAMC,SACFX,EAAAA,EAAAA,OAAAA,IACAU,EAAME,WACNZ,EAAAA,EAAAA,OAAAA,MACAA,EAAAA,EAAAA,OAAAA,SAAsB,GAIHA,EAAAA,EAAAA,WAIZA,EAAAA,EAAAA,UAAAA,GAMGA,EAAAA,EAAAA,OAAAA,OAIIA,EAAAA,EAAAA,OAAAA,KAKba,EAAYlB,EAAAA,GAAAA,IAAUmB,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,gKACxBG,EAAAA,EAAAA,OAAAA,IACIA,EAAAA,EAAAA,UAAAA,KACEA,EAAAA,EAAAA,WAAAA,QAOJe,EAAiBpB,EAAAA,GAAAA,IAAUqB,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,gKAC7BG,EAAAA,EAAAA,OAAAA,MACIA,EAAAA,EAAAA,UAAAA,KACEA,EAAAA,EAAAA,WAAAA,QAOJiB,GAAmBtB,EAAAA,EAAAA,IAAOuB,EAAAA,IAAPvB,CAA6BwB,IAAAA,GAAAtB,EAAAA,EAAAA,GAAA,6IAMnDG,EAAAA,EAAAA,OAAAA,QAIGoB,GAAiBzB,EAAAA,EAAAA,IAAO0B,EAAAA,IAAP1B,CAAoB2B,IAAAA,GAAAzB,EAAAA,EAAAA,GAAA,6IAMxCG,EAAAA,EAAAA,OAAAA,QAIGuB,EAAgB5B,EAAAA,GAAAA,IAAU6B,IAAAA,GAAA3B,EAAAA,EAAAA,GAAA,gQAe1B4B,EAAc9B,EAAAA,GAAAA,IAAU+B,IAAAA,GAAA7B,EAAAA,EAAAA,GAAA,gGAQxB8B,GAAOhC,EAAAA,EAAAA,IAAOiC,EAAAA,GAAPjC,CAAekC,IAAAA,GAAAhC,EAAAA,EAAAA,GAAA,kGACxBG,EAAAA,EAAAA,OAAAA,OACWA,EAAAA,EAAAA,WAITA,EAAAA,EAAAA,OAAAA,OAIA8B,EAAcnC,EAAAA,GAAAA,IAAUoC,IAAAA,GAAAlC,EAAAA,EAAAA,GAAA,sMAKtBG,EAAAA,EAAAA,UAAAA,IACEA,EAAAA,EAAAA,WAAAA,OAGNA,EAAAA,EAAAA,OAAAA,Y,wCCzKEgC,EAAyBC,EAAAA,KAAaC,MAAM,CACvDC,KAAMF,EAAAA,KAEHG,IAAI,EAAG,+CACPC,SAAS,yBACZC,MAAOL,EAAAA,KAEJM,QATS,+CASM,CAAEC,QAAS,+BAC1BH,SAAS,qBACZI,SAAUR,EAAAA,KAAaG,IAAI,GAAGC,SAAS,YACvCK,gBAAiBT,EAAAA,KAEdU,MAAM,CAACV,EAAAA,GAAQ,aAAc,wBAC7BI,SAAS,kC,+DCiBRO,GAAkC,CACtCT,KAAM,GACNG,MAAO,GACPG,SAAU,GACVC,gBAAiB,IAGNG,GAAmB,WAC9B,IAAAC,GAAkDC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1DI,EAAiBF,EAAA,GAAEG,EAAoBH,EAAA,GAC9CI,GACEL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GADVE,EAAwBD,EAAA,GAAEE,EAA2BF,EAAA,GAEtDG,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAaC,EAAAA,EAAAA,IAAYC,GAAAA,IAEzBC,EAAuB,WAC3BZ,GAAqB,SAAAa,GAAS,OAAKA,CAAS,GAC9C,EAEMC,EAA8B,WAClCV,GAA4B,SAAAS,GAAS,OAAKA,CAAS,GACrD,EAgBA,OANAE,EAAAA,EAAAA,YAAU,WACJN,GACFF,EAAS,WAEb,GAAG,CAACA,EAAUE,KAGZO,EAAAA,GAAAA,MAACzE,EAAO,CAAA0E,SAAA,EACNC,EAAAA,GAAAA,KAACjE,EAAY,CAAAgE,UACXC,EAAAA,GAAAA,KAACC,GAAAA,GAAK,CAACnC,KAAM,oBAEfkC,EAAAA,GAAAA,KAAChE,EAAI,CAAA+D,SAAC,mDACNC,EAAAA,GAAAA,KAACE,EAAAA,GAAM,CACL3B,cAAeA,GACf4B,SAtBe,SAAHC,EAAAC,GAGZ,IAFFvC,EAAIsC,EAAJtC,KAAMG,EAAKmC,EAALnC,MAAOG,EAAQgC,EAARhC,SACbkC,EAASD,EAATC,UAEFnB,GAASoB,EAAAA,GAAAA,IAAS,CAAEzC,KAAAA,EAAMG,MAAAA,EAAOG,SAAAA,KACjCkC,GACF,EAiBME,iBAAkB7C,EAAuBoC,SAExC,SAAAU,GAAA,IAAGC,EAAYD,EAAZC,aAAcC,EAAMF,EAANE,OAAQC,EAAOH,EAAPG,QAAO,OAC/Bd,EAAAA,GAAAA,MAAA,QAAMK,SAAUO,EAAaX,SAAA,EAC3BD,EAAAA,GAAAA,MAAC7D,EAAW,CAAA8D,SAAA,EACVC,EAAAA,GAAAA,KAAC7D,EAAY,CAAA4D,UACXD,EAAAA,GAAAA,MAAA,SAAAC,SAAA,EACEC,EAAAA,GAAAA,KAACa,EAAAA,GAAK,CAACC,KAAK,OAAOhD,KAAK,OAAOiD,YAAY,UAC3Cf,EAAAA,GAAAA,KAACgB,EAAAA,GAAY,CAAClD,KAAK,OAAOmD,UAAWzE,UAIzCwD,EAAAA,GAAAA,KAAC7D,EAAY,CAAA4D,UACXD,EAAAA,GAAAA,MAAA,SAAAC,SAAA,EACEC,EAAAA,GAAAA,KAACa,EAAAA,GAAK,CAACC,KAAK,QAAQhD,KAAK,QAAQiD,YAAY,YAC7Cf,EAAAA,GAAAA,KAACgB,EAAAA,GAAY,CAAClD,KAAK,QAAQmD,UAAWzE,UAI1CwD,EAAAA,GAAAA,KAAC7D,EAAY,CAAA4D,UACXD,EAAAA,GAAAA,MAAA,SAAAC,SAAA,EACEC,EAAAA,GAAAA,KAACa,EAAAA,GAAK,CACJC,KAAMjC,EAAoB,OAAS,WACnCf,KAAK,WACLiD,YAAY,cAEblC,GACCmB,EAAAA,GAAAA,KAACjD,EAAc,CAACmE,QAASxB,KAEzBM,EAAAA,GAAAA,KAACpD,EAAgB,CAACsE,QAASxB,IAE5BkB,EAAQxC,WAAauC,EAAOvC,WAC3B4B,EAAAA,GAAAA,KAACtD,EAAc,CAAAqD,SAAC,uBAEjBa,EAAQxC,WAAauC,EAAOvC,WAC3B4B,EAAAA,GAAAA,KAAC5C,EAAW,CAAA2C,UACVC,EAAAA,GAAAA,KAAA,OAAKmB,KAAMC,EAAAA,EAAS,mBAGxBpB,EAAAA,GAAAA,KAACgB,EAAAA,GAAY,CAAClD,KAAK,WAAWmD,UAAWzE,UAI7CwD,EAAAA,GAAAA,KAAC7D,EAAY,CAAA4D,UACXD,EAAAA,GAAAA,MAAA,SAAAC,SAAA,EACEC,EAAAA,GAAAA,KAACa,EAAAA,GAAK,CACJC,KAAM7B,EAA2B,OAAS,WAC1CnB,KAAK,kBACLiD,YAAY,qBAEb9B,GACCe,EAAAA,GAAAA,KAACjD,EAAc,CAACmE,QAAStB,KAEzBI,EAAAA,GAAAA,KAACpD,EAAgB,CAACsE,QAAStB,KAE7BI,EAAAA,GAAAA,KAACgB,EAAAA,GAAY,CAAClD,KAAK,kBAAkBmD,UAAWzE,aAItDwD,EAAAA,GAAAA,KAAC9C,EAAa,CAAA6C,UACZC,EAAAA,GAAAA,KAACqB,EAAAA,EAAM,CAACP,KAAM,SAASf,SAAC,qBAErB,KAGXD,EAAAA,GAAAA,MAACrC,EAAW,CAAAsC,SAAA,EACVC,EAAAA,GAAAA,KAAA,KAAAD,SAAG,8BACHC,EAAAA,GAAAA,KAAC1C,EAAI,CAACgE,GAAG,SAAQvB,SAAC,eAI1B,EC9HA,GAhBqB,WACnB,IAAMwB,GAAWC,EAAAA,EAAAA,IAAc,CAAEC,MAAO,uBAExC,OACEzB,EAAAA,GAAAA,KAAC0B,GAAAA,GAAS,CAAA3B,UACRD,EAAAA,GAAAA,MAACzE,EAAO,CAAA0E,SAAA,EACND,EAAAA,GAAAA,MAACrE,EAAe,CAAAsE,SAAA,EACdC,EAAAA,GAAAA,KAACnE,EAAK,CAAC8F,IAAKC,EAAiBC,IAAI,SAC/BN,GAAYO,EAAAA,IAAmB9B,EAAAA,GAAAA,KAAC+B,EAAAA,GAAO,CAACC,IAAKF,EAAAA,QAEjD9B,EAAAA,GAAAA,KAACxB,GAAgB,QAIzB,C","sources":["pages/registration/registration.styled.ts","pages/registration/components/registrationForm/registrationForm.styled.ts","pages/registration/components/registrationForm/registrationShema.ts","pages/registration/components/registrationForm/registrationForm.tsx","pages/registration/registration.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport { theme } from 'constants/theme';\nimport rectangle from '../../assets/images/rectangle.png';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    gap: 32px;\n  }\n`;\n\nexport const PetBlockWrapper = styled.div`\n  position: relative;\n  background-color: ${theme.colors.accent};\n  background-image: url(${rectangle});\n  background-repeat: no-repeat;\n  background-position: top left;\n  width: 280px;\n  height: 235px;\n  border-radius: 30px;\n\n  @media (min-width: 375px) {\n    width: 335px;\n    height: 280px;\n  }\n\n  @media (min-width: 768px) {\n    width: 592px;\n    height: 654px;\n    border-radius: 60px;\n    background-position: center bottom;\n  }\n`;\n\nexport const Image = styled.img`\n  position: absolute;\n  bottom: 0;\n  left: 50px;\n  width: 70%;\n\n  @media (min-width: 768px) {\n    width: 100%;\n    height: 100%;\n    left: 30px;\n  }\n`;\n","import { theme } from 'constants/theme';\nimport styled from 'styled-components';\nimport { AiOutlineEyeInvisible, AiOutlineEye } from 'react-icons/ai';\nimport { NavLink } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  padding: 28px 20px;\n  border-radius: 30px;\n  background-color: ${theme.colors.white};\n\n  @media (min-width: 768px) {\n    padding: 77px 84px;\n    border-radius: 60px;\n  }\n`;\n\nexport const TitleWrapper = styled.div`\n  margin-bottom: 12px;\n\n  @media (min-width: 768px) {\n    margin-bottom: 16px;\n  }\n`;\n\nexport const Text = styled.p`\n  font-size: ${theme.fontSizes.xxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 18px;\n  letter-spacing: -0.28px;\n  color: ${theme.colors.black};\n  margin-bottom: 24px;\n\n  @media (min-width: 768px) {\n    font-size: ${theme.fontSizes.s};\n    line-height: 1.222;\n    letter-spacing: -0.16px;\n    margin-bottom: 32px;\n  }\n`;\n\nexport const FormWrapper = styled.div``;\n\ninterface InputWrapperProps {\n  haserror?: boolean;\n  hassuccess?: boolean;\n}\n\nexport const InputWrapper = styled.div<InputWrapperProps>`\n  margin-bottom: 16px;\n  max-width: 424px;\n  position: relative;\n  width: 100%;\n\n  input {\n    width: 100%;\n    padding: 12px;\n    font-size: ${theme.fontSizes.xxs};\n    color: ${theme.colors.black};\n    font-weight: ${theme.fontWeight.medium};\n    line-height: 18px;\n    letter-spacing: -0.42px;\n    color: ${theme.colors.black};\n    border: 1px solid\n      ${props =>\n        props.haserror\n          ? theme.colors.red\n          : props.hassuccess\n          ? theme.colors.green\n          : theme.colors.lightGrey};\n    border-radius: 30px;\n    box-sizing: border-box;\n    outline: none;\n    transition: border-color ${theme.transition};\n\n    @media (min-width: 768px) {\n      padding: 16px;\n      font-size: ${theme.fontSizes.xs};\n      line-height: 1.25;\n      letter-spacing: -0.48px;\n    }\n\n    &:focus {\n      border-color: ${theme.colors.accent};\n    }\n\n    .error {\n      border: 1px solid ${theme.colors.red};\n    }\n  }\n`;\n\nexport const ErrorText = styled.div`\n  color: ${theme.colors.red};\n  font-size: ${theme.fontSizes.xxxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.1667;\n  letter-spacing: -0.36px;\n  margin-top: 4px;\n  margin-bottom: 12px;\n`;\n\nexport const SuccessMessage = styled.div`\n  color: ${theme.colors.green};\n  font-size: ${theme.fontSizes.xxxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.1667;\n  letter-spacing: -0.36px;\n  margin-top: 4px;\n  margin-bottom: 12px;\n`;\n\nexport const EyeIconInvisible = styled(AiOutlineEyeInvisible)`\n  position: absolute;\n  top: 26px;\n  right: 16px;\n  width: 22px;\n  height: 22px;\n  fill: ${theme.colors.accent};\n  transform: translateY(-50%);\n`;\n\nexport const EyeIconVisible = styled(AiOutlineEye)`\n  position: absolute;\n  top: 26px;\n  right: 16px;\n  width: 22px;\n  height: 22px;\n  fill: ${theme.colors.accent};\n  transform: translateY(-50%);\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: stretch;\n  width: 100%;\n  margin-top: 24px;\n  margin-bottom: 12px;\n\n  @media (min-width: 768px) {\n    margin-top: 16px;\n    margin-bottom: 48px;\n  }\n`;\n\nexport const SuccessIcon = styled.svg`\n  position: absolute;\n  top: 15px;\n  right: 50px;\n  width: 22px;\n  height: 22px;\n`;\n\nexport const Link = styled(NavLink)`\n  color: ${theme.colors.accent};\n  transition: color ${theme.transition};\n\n  &:hover,\n  :focus {\n    color: ${theme.colors.beige};\n  }\n`;\n\nexport const LinkWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 4px;\n  font-size: ${theme.fontSizes.xxs};\n  font-weight: ${theme.fontWeight.medium};\n  line-height: 1.428;\n  letter-spacing: -0.42px;\n  color: ${theme.colors.mediumGrey};\n`;\n","import * as yup from 'yup';\n\nconst regEx = /^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/;\n\nexport const RegistrationFormSchema = yup.object().shape({\n  name: yup\n    .string()\n    .min(3, 'Username must be at least 3 characters long')\n    .required('Full name is required'),\n  email: yup\n    .string()\n    .matches(regEx, { message: 'Please enter a valid email' })\n    .required('Email is required'),\n  password: yup.string().min(7).required('Required'),\n  confirmPassword: yup\n    .string()\n    .oneOf([yup.ref('password')], 'Passwords must match')\n    .required('Please confirm your password'),\n});\n","import {\n  ButtonWrapper,\n  ErrorText,\n  EyeIconInvisible,\n  EyeIconVisible,\n  FormWrapper,\n  InputWrapper,\n  Link,\n  LinkWrapper,\n  SuccessIcon,\n  SuccessMessage,\n  Text,\n  TitleWrapper,\n  Wrapper,\n} from './registrationForm.styled';\nimport { Formik, Field, ErrorMessage, FormikHelpers } from 'formik';\nimport sprite from 'assets/sprite.svg';\nimport { useEffect, useState } from 'react';\nimport { RegistrationFormSchema } from './registrationShema';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { Button } from 'ui/button';\nimport { Title } from 'ui';\nimport { useSelector } from 'react-redux';\nimport { register, selectIsLoggedIn } from '../../../../redux/auth';\nimport { AppDispatch } from 'redux/store';\n\ninterface RegistrationData {\n  name: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n\nconst initialValues: RegistrationData = {\n  name: '',\n  email: '',\n  password: '',\n  confirmPassword: '',\n};\n\nexport const RegistrationForm = () => {\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\n  const [isConfirmPasswordVisible, setIsConfirmPasswordVisible] =\n    useState(false);\n  const dispatch = useDispatch<AppDispatch>();\n  const navigate = useNavigate();\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n\n  const handleTogglePassword = () => {\n    setIsPasswordVisible(prevState => !prevState);\n  };\n\n  const handleToggleConfirmPassword = () => {\n    setIsConfirmPasswordVisible(prevState => !prevState);\n  };\n\n  const handleSubmit = (\n    { name, email, password }: Omit<RegistrationData, 'confirmPassword'>,\n    { resetForm }: FormikHelpers<RegistrationData>\n  ) => {\n    dispatch(register({ name, email, password }));\n    resetForm();\n  };\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      navigate('/profile');\n    }\n  }, [navigate, isLoggedIn]);\n\n  return (\n    <Wrapper>\n      <TitleWrapper>\n        <Title name={'Registration'} />\n      </TitleWrapper>\n      <Text>Thank you for your interest in our platform. </Text>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={RegistrationFormSchema}\n      >\n        {({ handleSubmit, errors, touched }) => (\n          <form onSubmit={handleSubmit}>\n            <FormWrapper>\n              <InputWrapper>\n                <label>\n                  <Field type=\"text\" name=\"name\" placeholder=\"Name\" />\n                  <ErrorMessage name=\"name\" component={ErrorText} />\n                </label>\n              </InputWrapper>\n\n              <InputWrapper>\n                <label>\n                  <Field type=\"email\" name=\"email\" placeholder=\" Email\" />\n                  <ErrorMessage name=\"email\" component={ErrorText} />\n                </label>\n              </InputWrapper>\n\n              <InputWrapper>\n                <label>\n                  <Field\n                    type={isPasswordVisible ? 'text' : 'password'}\n                    name=\"password\"\n                    placeholder=\" Password\"\n                  />\n                  {isPasswordVisible ? (\n                    <EyeIconVisible onClick={handleTogglePassword} />\n                  ) : (\n                    <EyeIconInvisible onClick={handleTogglePassword} />\n                  )}\n                  {touched.password && !errors.password && (\n                    <SuccessMessage>Password is secure</SuccessMessage>\n                  )}\n                  {touched.password && !errors.password && (\n                    <SuccessIcon>\n                      <use href={sprite + '#icon-check'}></use>\n                    </SuccessIcon>\n                  )}\n                  <ErrorMessage name=\"password\" component={ErrorText} />\n                </label>\n              </InputWrapper>\n\n              <InputWrapper>\n                <label>\n                  <Field\n                    type={isConfirmPasswordVisible ? 'text' : 'password'}\n                    name=\"confirmPassword\"\n                    placeholder=\"Confirm Password\"\n                  />\n                  {isConfirmPasswordVisible ? (\n                    <EyeIconVisible onClick={handleToggleConfirmPassword} />\n                  ) : (\n                    <EyeIconInvisible onClick={handleToggleConfirmPassword} />\n                  )}\n                  <ErrorMessage name=\"confirmPassword\" component={ErrorText} />\n                </label>\n              </InputWrapper>\n            </FormWrapper>\n            <ButtonWrapper>\n              <Button type={'submit'}>REGISTRATION</Button>\n            </ButtonWrapper>\n          </form>\n        )}\n      </Formik>\n      <LinkWrapper>\n        <p>Already have an account?</p>\n        <Link to=\"/login\">Login</Link>\n      </LinkWrapper>\n    </Wrapper>\n  );\n};\n","import { useMediaQuery } from 'react-responsive';\nimport registrationImg from 'assets/images/registrationImg.png';\nimport { registrationPet } from 'constants/pets';\nimport { Image, PetBlockWrapper, Wrapper } from './registration.styled';\n\nimport { PetInfo } from 'components';\nimport { RegistrationForm } from './components/registrationForm';\nimport { Container } from 'ui';\n\nconst Registration = () => {\n  const isMobile = useMediaQuery({ query: '(max-width: 767px)' });\n\n  return (\n    <Container>\n      <Wrapper>\n        <PetBlockWrapper>\n          <Image src={registrationImg} alt=\"Pet\" />\n          {!isMobile && registrationPet && <PetInfo pet={registrationPet} />}\n        </PetBlockWrapper>\n        <RegistrationForm />\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default Registration;\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","PetBlockWrapper","_templateObject2","theme","rectangle","Image","_templateObject3","TitleWrapper","Text","FormWrapper","_templateObject4","InputWrapper","_templateObject5","props","haserror","hassuccess","ErrorText","_templateObject6","SuccessMessage","_templateObject7","EyeIconInvisible","AiOutlineEyeInvisible","_templateObject8","EyeIconVisible","AiOutlineEye","_templateObject9","ButtonWrapper","_templateObject10","SuccessIcon","_templateObject11","Link","NavLink","_templateObject12","LinkWrapper","_templateObject13","RegistrationFormSchema","yup","shape","name","min","required","email","matches","message","password","confirmPassword","oneOf","initialValues","RegistrationForm","_useState","useState","_useState2","_slicedToArray","isPasswordVisible","setIsPasswordVisible","_useState3","_useState4","isConfirmPasswordVisible","setIsConfirmPasswordVisible","dispatch","useDispatch","navigate","useNavigate","isLoggedIn","useSelector","selectIsLoggedIn","handleTogglePassword","prevState","handleToggleConfirmPassword","useEffect","_jsxs","children","_jsx","Title","Formik","onSubmit","_ref","_ref2","resetForm","register","validationSchema","_ref3","handleSubmit","errors","touched","Field","type","placeholder","ErrorMessage","component","onClick","href","sprite","Button","to","isMobile","useMediaQuery","query","Container","src","registrationImg","alt","registrationPet","PetInfo","pet"],"sourceRoot":""}