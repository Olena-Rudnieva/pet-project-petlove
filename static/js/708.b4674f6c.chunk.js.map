{"version":3,"file":"static/js/708.b4674f6c.chunk.js","mappings":"yPAEaA,EAAUC,EAAAA,GAAAA,QAAcC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wKAUxBC,EAAUH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,+G,GAObF,EAAAA,GAAAA,GAASK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,sF,mBCjBhBI,EAAa,SAACC,GAAgB,OAAKA,EAAMC,KAAKC,QAAS,EACvDC,EAAuB,SAACH,GAAgB,OAAKA,EAAMC,KAAKG,UAAW,E,UCqEhF,EArDa,WAAO,IAADC,EACjBC,GAAwCC,EAAAA,EAAAA,UAAiB,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAAsCL,EAAAA,EAAAA,UAAiB,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAnDE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAC5BG,GAAWC,EAAAA,EAAAA,MAEXhB,GAAOiB,EAAAA,EAAAA,IAAYnB,GACzBoB,QAAQC,IAAI,OAAQnB,GAEpB,IAAMG,EAA8C,QAApCC,GAAGa,EAAAA,EAAAA,IAAYf,UAAqB,IAAAE,EAAAA,EAAI,EAsBxD,OAJAgB,EAAAA,EAAAA,YAAU,WACRL,GAASM,EAAAA,EAAAA,GAAUZ,GACrB,GAAG,CAACM,EAAUN,KAGZa,EAAAA,EAAAA,KAAC/B,EAAO,CAAAgC,UACNC,EAAAA,EAAAA,MAACC,EAAAA,GAAS,CAAAF,SAAA,EACRC,EAAAA,EAAAA,MAAC7B,EAAO,CAAA4B,SAAA,EACND,EAAAA,EAAAA,KAACI,EAAAA,GAAK,CAACC,KAAM,UACbL,EAAAA,EAAAA,KAACM,EAAAA,GAAW,CACVC,aAjBW,SAACC,GACpBA,EAAMC,iBAENb,QAAQC,IAAI,0BAA2BN,EAEzC,EAaUmB,YAAanB,EAAYoB,OAAS,EAClCC,aAvBW,SAACJ,GACpBhB,EAAegB,EAAMK,OAAOC,MAC9B,QA8BMd,EAAAA,EAAAA,KAACe,EAAAA,GAAU,CAAClC,WAAYA,EAAYmC,aArCjB,SAACC,GACxB7B,EAAgB6B,EAAEC,SAAW,IAC7BC,EAAAA,EAAAA,IACF,QAsCF,C,uDCtEO,IAAMA,EAAY,WACrBC,OAAOC,SAAS,CACdC,IAAK,EACLC,SAAU,UAEd,C","sources":["pages/news/news.styled.ts","redux/news/newsSelectors.ts","pages/news/news.tsx","utils/topScroll.ts"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Section = styled.section`\n  margin: 0 auto;\n  padding-top: 64px;\n  padding-bottom: 80px;\n  padding-left: 30px;\n  padding-right: 30px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 60px;\n`;\n\nexport const List = styled.ul`\n  margin-bottom: 60px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 35px;\n`;","import { RootState } from 'redux/store';\n\nexport const selectNews = (state: RootState) => state.news.newsData;\nexport const selectTotalPagesNews = (state: RootState) => state.news.totalPages;\n","import { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { fetchNews } from '../../redux/news/newsOperations';\nimport { Section, Wrapper } from './news.styled';\nimport { topScroll } from 'utils';\n\nimport { Container, Pagination, SearchField, Title } from 'ui';\nimport {\n  selectNews,\n  selectTotalPagesNews,\n} from '../../redux/news/newsSelectors';\n// import { NewsItem } from 'components';\nimport { AppDispatch } from 'redux/store';\n\ninterface PageChangeEvent {\n  selected: number;\n}\n\nconst News = () => {\n  const [selectedPage, setSelectedPage] = useState<number>(1);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const dispatch = useDispatch<AppDispatch>();\n\n  const news = useSelector(selectNews);\n  console.log('news', news);\n\n  const totalPages = useSelector(selectTotalPagesNews) ?? 1;\n\n  const handlePageChange = (e: PageChangeEvent) => {\n    setSelectedPage(e.selected + 1);\n    topScroll();\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    // Implement search logic here\n    console.log('Search query submitted:', searchQuery);\n    // Example: dispatch(fetchNews(selectedPage, searchQuery));\n  };\n\n  useEffect(() => {\n    dispatch(fetchNews(selectedPage));\n  }, [dispatch, selectedPage]);\n\n  return (\n    <Section>\n      <Container>\n        <Wrapper>\n          <Title name={'News'} />\n          <SearchField\n            handleSubmit={handleSubmit}\n            isSearching={searchQuery.length > 0}\n            handleChange={handleChange}\n          />\n        </Wrapper>\n\n        {/* <List>\n          {news?.map(item => (\n            <NewsItem key={item._id} item={item} />\n          ))}\n        </List> */}\n        <Pagination totalPages={totalPages} onPageChange={handlePageChange} />\n      </Container>\n    </Section>\n  );\n};\n\nexport default News;\n","export const topScroll = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  }"],"names":["Section","styled","_templateObject","_taggedTemplateLiteral","Wrapper","_templateObject2","_templateObject3","selectNews","state","news","newsData","selectTotalPagesNews","totalPages","_useSelector","_useState","useState","_useState2","_slicedToArray","selectedPage","setSelectedPage","_useState3","_useState4","searchQuery","setSearchQuery","dispatch","useDispatch","useSelector","console","log","useEffect","fetchNews","_jsx","children","_jsxs","Container","Title","name","SearchField","handleSubmit","event","preventDefault","isSearching","length","handleChange","target","value","Pagination","onPageChange","e","selected","topScroll","window","scrollTo","top","behavior"],"sourceRoot":""}